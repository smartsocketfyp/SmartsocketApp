{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\OnOffScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar OnOffScreen = function (_React$Component) {\n  _inherits(OnOffScreen, _React$Component);\n\n  var _super = _createSuper(OnOffScreen);\n\n  function OnOffScreen() {\n    _classCallCheck(this, OnOffScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OnOffScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.Instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }\n      }, \" Switch on/off your socket here\"), React.createElement(TouchableOpacity, {\n        style: styles.Navigation_Button,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"MainFunction\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.Button_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, \" Return to functions page \")));\n    }\n  }]);\n\n  return OnOffScreen;\n}(React.Component);\n\nexport { OnOffScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Instructions: {\n    textAlign: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  Navigation_Button: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/OnOffScreen.js"],"names":["React","OnOffScreen","styles","container","Instructions","Navigation_Button","props","navigation","navigate","Button_Text","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","textAlign","marginLeft","marginRight","marginTop","marginBottom","color","fontWeight","fontSize","borderRadius","height","width"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;IAGqBC,W;;;;;;;;;;;;;6BACZ;AAAA;;AACP,aACU,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAGI,oBAAC,gBAAD;AACQ,QAAA,KAAK,EAAEF,MAAM,CAACG,iBADtB;AAEQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,cAA/B,CAAN;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIN,MAAM,CAACO,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJJ,CAHJ,CADV;AAaA;;;;EAfuCT,KAAK,CAACU,S;;SAA1BT,W;AAkBrB,IAAMC,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAQ7BZ,EAAAA,YAAY,EAAE;AACVa,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,WAAW,EAAE,EAHH;AAIVC,IAAAA,SAAS,EAAE,EAJD;AAKVC,IAAAA,YAAY,EAAE,EALJ;AAMVC,IAAAA,KAAK,EAAE,MANG;AAOVC,IAAAA,UAAU,EAAE,MAPF;AAQVC,IAAAA,QAAQ,EAAE;AARA,GARe;AAkB7BnB,EAAAA,iBAAiB,EAAE;AACfW,IAAAA,eAAe,EAAG,SADH;AAEfS,IAAAA,YAAY,EAAG,CAFA;AAGfC,IAAAA,MAAM,EAAE,EAHO;AAIfC,IAAAA,KAAK,EAAG,GAJO;AAKfP,IAAAA,SAAS,EAAE,EALI;AAMfC,IAAAA,YAAY,EAAE,GANC;AAOfP,IAAAA,UAAU,EAAE,QAPG;AAQfC,IAAAA,cAAc,EAAE;AARD,GAlBU;AA6B7BN,EAAAA,WAAW,EAAE;AACTa,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,UAAU,EAAE;AAFH;AA7BgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\n\r\nexport default class OnOffScreen extends React.Component {\r\n\trender(){\r\n\t\treturn(\r\n            <View style={styles.container}>\r\n                <Text style = {styles.Instructions}> Switch on/off your socket here</Text>\r\n\r\n                <TouchableOpacity\r\n                        style={styles.Navigation_Button}\r\n                        onPress={() => this.props.navigation.navigate(\"MainFunction\")}\r\n                    >\r\n                    <Text style = {styles.Button_Text}> Return to functions page </Text>\r\n                </TouchableOpacity>  \r\n            \r\n            </View>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    \r\n    Instructions: {\r\n        textAlign: 'center',\r\n        marginLeft: 25,\r\n        marginRight: 25,\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25\r\n    },\r\n    Navigation_Button: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 250,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}