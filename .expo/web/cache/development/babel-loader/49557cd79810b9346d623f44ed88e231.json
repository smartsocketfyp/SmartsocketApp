{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\n\nvar SignUpScreen = function (_React$Component) {\n  _inherits(SignUpScreen, _React$Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen() {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSignUp = function () {\n      var _this$state = _this.state,\n          emailPhonenumber = _this$state.emailPhonenumber,\n          password = _this$state.password;\n      firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password).catch(function (error) {\n        return _this.setState({\n          errorMessage: error.message\n        });\n      });\n    };\n\n    _this.state = {\n      fullname: \"\",\n      username: \"\",\n      emailPhonenumber: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.Instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, \" Fill in the details below\"), React.createElement(TextInput, {\n        style: styles.Full_Name,\n        placeholder: \"Full Name*\",\n        value: this.state.fullname,\n        onChangeText: function onChangeText(fullname) {\n          return _this2.setState({\n            fullname: fullname\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Username,\n        placeholder: \"Username*\",\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Email_Phone,\n        placeholder: \"Email or Phone Number\",\n        value: this.state.emailPhonenumber,\n        onChangeText: function onChangeText(emailPhonenumber) {\n          return _this2.setState({\n            emailPhonenumber: emailPhonenumber\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: this.state.password.length < 8 ? styles.Warning_Message : styles.Password_Accepted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, this.state.password.length < 8 ? 'Password must be more than 8 characters' : 'Password accepted!'), React.createElement(TextInput, {\n        style: styles.Password,\n        placeholder: \"Password*\",\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Confirm_Password,\n        placeholder: \"Confirm Password*\",\n        value: this.state.confirmpassword,\n        onChangeText: function onChangeText(confirmpassword) {\n          return _this2.setState({\n            confirmpassword: confirmpassword\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: this.state.password != this.state.confirmpassword ? styles.Warning_Message : styles.Password_Accepted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, this.state.password != this.state.confirmpassword ? 'Password do not match!' : 'Password match!'), React.createElement(TouchableOpacity, {\n        style: this.state.fullname == '' || this.state.username == '' || this.state.emailPhonenumber == '' || this.state.password == '' || this.state.confirmpassword == '' || this.state.password != this.state.confirmpassword ? styles.Sign_Up_Button_Disabled : styles.Sign_Up_Button_Enabled,\n        disabled: this.state.fullname == '' || this.state.username == '' || this.state.emailPhonenumber == '' || this.state.password == '' || this.state.confirmpassword == '' || this.state.password != this.state.confirmpassword,\n        onPress: function onPress() {\n          return _this2.handleSignUp() > _this2.props.navigation.navigate(\"Verification\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.Button_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \" Sign Up \"))));\n    }\n  }]);\n\n  return SignUpScreen;\n}(React.Component);\n\nexport { SignUpScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Instructions: {\n    textAlign: 'center',\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25,\n    marginTop: 50,\n    marginBottom: 25\n  },\n  Full_Name: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Username: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Email_Phone: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Confirm_Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Warning_Message: {\n    color: \"#FF0000\",\n    fontWeight: \"600\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  Password_Accepted: {\n    color: \"#00FF00\",\n    fontWeight: \"600\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  Sign_Up_Button_Disabled: {\n    backgroundColor: '#800000',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Sign_Up_Button_Enabled: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/SignUpScreen.js"],"names":["React","firebase","SignUpScreen","handleSignUp","state","emailPhonenumber","password","auth","createUserWithEmailAndPassword","catch","error","setState","errorMessage","message","fullname","username","confirmpassword","styles","container","Instructions","Full_Name","Username","Email_Phone","length","Warning_Message","Password_Accepted","Password","Confirm_Password","Sign_Up_Button_Disabled","Sign_Up_Button_Enabled","props","navigation","navigate","Button_Text","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","textAlign","color","fontWeight","fontSize","marginTop","marginBottom","height","width","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button, View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet} from 'react-native';\r\n//import * as firebase from 'firebase';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n//import { firebase } from '@react-native-firebase/auth';\r\n\r\nexport default class SignUpScreen extends React.Component {\r\n    handleSignUp = () => {\r\n        const {emailPhonenumber,password} = this.state;\r\n        firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password).catch(error => this.setState({errorMessage: error.message})\r\n        );\r\n    };\r\n    \r\n    state = {\r\n        fullname : \"\",\r\n        username : \"\",\r\n        emailPhonenumber : \"\",\r\n        password : \"\",\r\n        confirmpassword : \"\"\r\n    }\r\n    \r\n    render(){\r\n\r\n\t\treturn(\r\n            <ScrollView>\r\n                <View style={styles.container}>\r\n                    <Text style = {styles.Instructions}> Fill in the details below</Text>\r\n\r\n                    <TextInput\r\n                        style={styles.Full_Name}\r\n                        placeholder=\"Full Name*\"\r\n                        value={this.state.fullname}\r\n                        onChangeText={fullname => this.setState({fullname})}\r\n                    />\r\n\r\n                    <TextInput\r\n                        style={styles.Username}\r\n                        placeholder=\"Username*\"\r\n                        value={this.state.username}\r\n                        onChangeText={username => this.setState({username})}\r\n                    />\r\n\r\n                    <TextInput\r\n                        style={styles.Email_Phone}\r\n                        placeholder=\"Email or Phone Number\"\r\n                        value={this.state.emailPhonenumber}\r\n                        onChangeText={emailPhonenumber => this.setState({emailPhonenumber})}\r\n                    />\r\n\r\n                    <Text style={(this.state.password.length < 8) ? styles.Warning_Message : styles.Password_Accepted}> \r\n                        {(this.state.password.length < 8) ? 'Password must be more than 8 characters' : 'Password accepted!'}\r\n                    </Text>\r\n\r\n                    <TextInput\r\n                        style={styles.Password}\r\n                        placeholder=\"Password*\"\r\n                        value={this.state.password}\r\n                        onChangeText={password => this.setState({password})}\r\n                        secureTextEntry\r\n                    />\r\n\r\n                    <TextInput\r\n                        style={styles.Confirm_Password}\r\n                        placeholder=\"Confirm Password*\"\r\n                        value={this.state.confirmpassword}\r\n                        onChangeText={confirmpassword => this.setState({confirmpassword})}\r\n                        secureTextEntry\r\n                    />\r\n\r\n                    <Text style={(this.state.password != this.state.confirmpassword) ? styles.Warning_Message : styles.Password_Accepted}> \r\n                        {(this.state.password != this.state.confirmpassword) ? 'Password do not match!' : 'Password match!'}\r\n                    </Text>\r\n                    \r\n                    <TouchableOpacity\r\n                        style = \r\n                        {(\r\n                            (this.state.fullname == '')||\r\n                            (this.state.username == '')||\r\n                            (this.state.emailPhonenumber == '')||\r\n                            (this.state.password == '')||\r\n                            (this.state.confirmpassword == '')||\r\n                            (this.state.password != this.state.confirmpassword)\r\n                        ) ? styles.Sign_Up_Button_Disabled : styles.Sign_Up_Button_Enabled}\r\n                        \r\n                        disabled = \r\n                        {\r\n                            (this.state.fullname == '')||\r\n                            (this.state.username == '')||\r\n                            (this.state.emailPhonenumber == '')||\r\n                            (this.state.password == '')||\r\n                            (this.state.confirmpassword == '')||\r\n                            (this.state.password != this.state.confirmpassword)\r\n                        } \r\n                        onPress={() => this.handleSignUp() > this.props.navigation.navigate(\"Verification\")}\r\n                        //onPress={() => this.props.navigation.navigate(\"Verification\")}\r\n                    >\r\n                        <Text style = {styles.Button_Text}> Sign Up </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    \r\n    Instructions: {\r\n        textAlign: 'center',\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25,\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Full_Name: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Username: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Email_Phone: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Confirm_Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25, \r\n    },\r\n\r\n    Warning_Message: {\r\n        color: \"#FF0000\",\r\n        fontWeight: \"600\",\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n\r\n    Password_Accepted: {\r\n        color: \"#00FF00\",\r\n        fontWeight: \"600\",\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n\r\n    Sign_Up_Button_Disabled: {\r\n        backgroundColor : '#800000',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Sign_Up_Button_Enabled: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}