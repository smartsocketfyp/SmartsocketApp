{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport INTERNALS from \"../../utils/internals\";\nimport { getNativeModule } from \"../../utils/native\";\n\nvar User = function () {\n  function User(auth, user) {\n    _classCallCheck(this, User);\n\n    this._auth = auth;\n    this._user = user;\n  }\n\n  _createClass(User, [{\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      return getNativeModule(this._auth).delete().then(function () {\n        _this._auth._setUser();\n      });\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return getNativeModule(this._auth).getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return getNativeModule(this._auth).getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function linkWithCredential(credential) {\n      var _this2 = this;\n\n      return getNativeModule(this._auth).linkWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this2._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"linkAndRetrieveDataWithCredential\",\n    value: function linkAndRetrieveDataWithCredential(credential) {\n      var _this3 = this;\n\n      console.warn('Deprecated linkAndRetrieveDataWithCredential in favor of linkWithCredential.');\n      return getNativeModule(this._auth).linkWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this3._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function reauthenticateWithCredential(credential) {\n      var _this4 = this;\n\n      return getNativeModule(this._auth).reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this4._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reauthenticateAndRetrieveDataWithCredential\",\n    value: function reauthenticateAndRetrieveDataWithCredential(credential) {\n      var _this5 = this;\n\n      console.warn('Deprecated reauthenticateAndRetrieveDataWithCredential in favor of reauthenticateWithCredential.');\n      return getNativeModule(this._auth).reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this5._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this6 = this;\n\n      return getNativeModule(this._auth).reload().then(function (user) {\n        _this6._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      var _this7 = this;\n\n      return getNativeModule(this._auth).sendEmailVerification(actionCodeSettings).then(function (user) {\n        _this7._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return _extends({}, this._user);\n    }\n  }, {\n    key: \"unlink\",\n    value: function unlink(providerId) {\n      var _this8 = this;\n\n      return getNativeModule(this._auth).unlink(providerId).then(function (user) {\n        return _this8._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(email) {\n      var _this9 = this;\n\n      return getNativeModule(this._auth).updateEmail(email).then(function (user) {\n        _this9._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(password) {\n      var _this10 = this;\n\n      return getNativeModule(this._auth).updatePassword(password).then(function (user) {\n        _this10._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(credential) {\n      var _this11 = this;\n\n      return getNativeModule(this._auth).updatePhoneNumber(credential.providerId, credential.token, credential.secret).then(function (user) {\n        _this11._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile() {\n      var _this12 = this;\n\n      var updates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return getNativeModule(this._auth).updateProfile(updates).then(function (user) {\n        _this12._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function linkWithPhoneNumber() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithPhoneNumber'));\n    }\n  }, {\n    key: \"linkWithPopup\",\n    value: function linkWithPopup() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithPopup'));\n    }\n  }, {\n    key: \"linkWithRedirect\",\n    value: function linkWithRedirect() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithRedirect'));\n    }\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithPhoneNumber'));\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithPopup'));\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function reauthenticateWithRedirect() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithRedirect'));\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._user.displayName || null;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._user.email || null;\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._user.emailVerified || false;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._user.isAnonymous || false;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._user.metadata;\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._user.phoneNumber || null;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._user.photoURL || null;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._user.providerData;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._user.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._user.uid;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_PROPERTY('User', 'refreshToken'));\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/modules/auth/User.js"],"names":["INTERNALS","getNativeModule","User","auth","user","_auth","_user","delete","then","_setUser","forceRefresh","getIdToken","getIdTokenResult","credential","linkWithCredential","providerId","token","secret","userCredential","_setUserCredential","console","warn","reauthenticateWithCredential","reload","actionCodeSettings","sendEmailVerification","unlink","email","updateEmail","password","updatePassword","updatePhoneNumber","updates","updateProfile","Error","STRINGS","ERROR_UNSUPPORTED_CLASS_METHOD","displayName","emailVerified","isAnonymous","metadata","phoneNumber","photoURL","providerData","uid","ERROR_UNSUPPORTED_CLASS_PROPERTY"],"mappings":"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","sourcesContent":["/**\n * \n * User representation wrapper\n */\nimport INTERNALS from '../../utils/internals';\nimport { getNativeModule } from '../../utils/native';\nexport default class User {\n  /**\n   *\n   * @param auth Instance of Authentication class\n   * @param user user result object from native\n   */\n  constructor(auth, user) {\n    this._auth = auth;\n    this._user = user;\n  }\n  /**\n   * PROPERTIES\n   */\n\n\n  get displayName() {\n    return this._user.displayName || null;\n  }\n\n  get email() {\n    return this._user.email || null;\n  }\n\n  get emailVerified() {\n    return this._user.emailVerified || false;\n  }\n\n  get isAnonymous() {\n    return this._user.isAnonymous || false;\n  }\n\n  get metadata() {\n    return this._user.metadata;\n  }\n\n  get phoneNumber() {\n    return this._user.phoneNumber || null;\n  }\n\n  get photoURL() {\n    return this._user.photoURL || null;\n  }\n\n  get providerData() {\n    return this._user.providerData;\n  }\n\n  get providerId() {\n    return this._user.providerId;\n  }\n\n  get uid() {\n    return this._user.uid;\n  }\n  /**\n   * METHODS\n   */\n\n  /**\n   * Delete the current user\n   * @return {Promise}\n   */\n\n\n  delete() {\n    return getNativeModule(this._auth).delete().then(() => {\n      this._auth._setUser();\n    });\n  }\n  /**\n   * Returns a JWT token used to identify the user to a Firebase service.\n   *\n   * @param forceRefresh boolean Force refresh regardless of token expiration.\n   * @return {Promise<string>}\n   */\n\n\n  getIdToken(forceRefresh = false) {\n    return getNativeModule(this._auth).getIdToken(forceRefresh);\n  }\n  /**\n   * Returns a IdTokenResult object which contains the ID token JWT string and other properties for getting\n   * data associated with the token and all the decoded payload claims.\n   *\n   * @param forceRefresh boolean Force refresh regardless of token expiration.\n   * @return {Promise<IdTokenResult>}\n   */\n\n\n  getIdTokenResult(forceRefresh = false) {\n    return getNativeModule(this._auth).getIdTokenResult(forceRefresh);\n  }\n  /**\n   * @param credential\n   */\n\n\n  linkWithCredential(credential) {\n    return getNativeModule(this._auth).linkWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n  /**\n   * @deprecated Deprecated linkAndRetrieveDataWithCredential in favor of linkWithCredential.\n   * @param credential\n   */\n\n\n  linkAndRetrieveDataWithCredential(credential) {\n    console.warn('Deprecated linkAndRetrieveDataWithCredential in favor of linkWithCredential.');\n    return getNativeModule(this._auth).linkWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n  /**\n   * Re-authenticate a user with a third-party authentication provider\n   * @return {Promise}         A promise resolved upon completion\n   */\n\n\n  reauthenticateWithCredential(credential) {\n    return getNativeModule(this._auth).reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n  /**\n   * Re-authenticate a user with a third-party authentication provider\n   *\n   * @deprecated Deprecated reauthenticateAndRetrieveDataWithCredential in favor of reauthenticateWithCredential.\n   * @return {Promise}         A promise resolved upon completion\n   */\n\n\n  reauthenticateAndRetrieveDataWithCredential(credential) {\n    console.warn('Deprecated reauthenticateAndRetrieveDataWithCredential in favor of reauthenticateWithCredential.');\n    return getNativeModule(this._auth).reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n  /**\n   * Reload the current user\n   * @return {Promise}\n   */\n\n\n  reload() {\n    return getNativeModule(this._auth).reload().then(user => {\n      this._auth._setUser(user);\n    });\n  }\n  /**\n   * Send verification email to current user.\n   */\n\n\n  sendEmailVerification(actionCodeSettings) {\n    return getNativeModule(this._auth).sendEmailVerification(actionCodeSettings).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  toJSON() {\n    return Object.assign({}, this._user);\n  }\n  /**\n   *\n   * @param providerId\n   * @return {Promise.<TResult>|*}\n   */\n\n\n  unlink(providerId) {\n    return getNativeModule(this._auth).unlink(providerId).then(user => this._auth._setUser(user));\n  }\n  /**\n   * Update the current user's email\n   *\n   * @param  {string} email The user's _new_ email\n   * @return {Promise}       A promise resolved upon completion\n   */\n\n\n  updateEmail(email) {\n    return getNativeModule(this._auth).updateEmail(email).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n  /**\n   * Update the current user's password\n   * @param  {string} password the new password\n   * @return {Promise}\n   */\n\n\n  updatePassword(password) {\n    return getNativeModule(this._auth).updatePassword(password).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n  /**\n   * Update the current user's phone number\n   *\n   * @param  {AuthCredential} credential Auth credential with the _new_ phone number\n   * @return {Promise}\n   */\n\n\n  updatePhoneNumber(credential) {\n    return getNativeModule(this._auth).updatePhoneNumber(credential.providerId, credential.token, credential.secret).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n  /**\n   * Update the current user's profile\n   * @param  {Object} updates An object containing the keys listed [here](https://firebase.google.com/docs/auth/ios/manage-users#update_a_users_profile)\n   * @return {Promise}\n   */\n\n\n  updateProfile(updates = {}) {\n    return getNativeModule(this._auth).updateProfile(updates).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n\n  linkWithPhoneNumber() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithPhoneNumber'));\n  }\n\n  linkWithPopup() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithPopup'));\n  }\n\n  linkWithRedirect() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'linkWithRedirect'));\n  }\n\n  reauthenticateWithPhoneNumber() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithPhoneNumber'));\n  }\n\n  reauthenticateWithPopup() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithPopup'));\n  }\n\n  reauthenticateWithRedirect() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_METHOD('User', 'reauthenticateWithRedirect'));\n  }\n\n  get refreshToken() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_CLASS_PROPERTY('User', 'refreshToken'));\n  }\n\n}"]},"metadata":{},"sourceType":"module"}