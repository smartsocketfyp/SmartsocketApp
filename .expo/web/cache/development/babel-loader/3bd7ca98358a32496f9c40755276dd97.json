{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport memoize from 'memoizee';\nvar DEFAULT_LABEL_COLOR = '#ccc';\nvar DEFAULT_LABEL_WRAPPER_FLEX = 1;\nvar DEFAULT_LINE_COLOR = '#dad9d4';\nvar DEFAULT_UNIT_FLEX = 12;\nvar LABEL_FONT_SIZE = 12;\nexport default memoize(function (_ref) {\n  var _label;\n\n  var completeBorder = _ref.completeBorder,\n      horizontal = _ref.horizontal,\n      labelColor = _ref.labelColor,\n      labelWrapperFlex = _ref.labelWrapperFlex,\n      lineColor = _ref.lineColor,\n      unitFlex = _ref.unitFlex;\n  var unitBorderStyles = {\n    borderColor: lineColor || DEFAULT_LINE_COLOR,\n    borderWidth: 1\n  };\n  var containerFlexDirection;\n  var labelTransformation;\n  var labelMarginSide;\n\n  if (horizontal) {\n    containerFlexDirection = 'column';\n    labelTransformation = {\n      translateX: 4\n    };\n    labelMarginSide = 'Top';\n    unitBorderStyles.borderRightWidth = !completeBorder ? 0 : unitBorderStyles.borderWidth;\n  } else {\n    containerFlexDirection = 'row';\n    labelTransformation = {\n      translateY: -(1 + LABEL_FONT_SIZE / 2)\n    };\n    labelMarginSide = 'Right';\n    unitBorderStyles.borderTopWidth = !completeBorder ? 0 : unitBorderStyles.borderWidth;\n  }\n\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      flex: 1,\n      flexDirection: containerFlexDirection\n    },\n    labelWrapper: {\n      flex: labelWrapperFlex || DEFAULT_LABEL_WRAPPER_FLEX\n    },\n    label: (_label = {\n      color: labelColor || DEFAULT_LABEL_COLOR,\n      fontFamily: 'Avenir',\n      fontSize: 12\n    }, _defineProperty(_label, \"margin\" + labelMarginSide, LABEL_FONT_SIZE / 2), _defineProperty(_label, \"textAlign\", 'right'), _defineProperty(_label, \"transform\", [labelTransformation]), _label),\n    unit: _objectSpread(_objectSpread({}, unitBorderStyles), {}, {\n      flex: unitFlex || DEFAULT_UNIT_FLEX\n    })\n  });\n});","map":{"version":3,"sources":["C:/Users/orange7332/Desktop/SmartsocketApp/node_modules/react-native-charts/src/components/Grid/GraduationUnit/styles.js"],"names":["memoize","DEFAULT_LABEL_COLOR","DEFAULT_LABEL_WRAPPER_FLEX","DEFAULT_LINE_COLOR","DEFAULT_UNIT_FLEX","LABEL_FONT_SIZE","completeBorder","horizontal","labelColor","labelWrapperFlex","lineColor","unitFlex","unitBorderStyles","borderColor","borderWidth","containerFlexDirection","labelTransformation","labelMarginSide","translateX","borderRightWidth","translateY","borderTopWidth","StyleSheet","create","container","backgroundColor","flex","flexDirection","labelWrapper","label","color","fontFamily","fontSize","unit"],"mappings":";;;;;;;AACA,OAAOA,OAAP,MAAoB,UAApB;AAGA,IAAMC,mBAAmB,GAAG,MAA5B;AACA,IAAMC,0BAA0B,GAAG,CAAnC;AACA,IAAMC,kBAAkB,GAAG,SAA3B;AACA,IAAMC,iBAAiB,GAAG,EAA1B;AACA,IAAMC,eAAe,GAAG,EAAxB;AAEA,eAAeL,OAAO,CAAC,gBAAuF;AAAA;;AAAA,MAApFM,cAAoF,QAApFA,cAAoF;AAAA,MAApEC,UAAoE,QAApEA,UAAoE;AAAA,MAAxDC,UAAwD,QAAxDA,UAAwD;AAAA,MAA5CC,gBAA4C,QAA5CA,gBAA4C;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5G,MAAMC,gBAAgB,GAAG;AACvBC,IAAAA,WAAW,EAAEH,SAAS,IAAIP,kBADH;AAEvBW,IAAAA,WAAW,EAAE;AAFU,GAAzB;AAIA,MAAIC,sBAAJ;AACA,MAAIC,mBAAJ;AACA,MAAIC,eAAJ;;AAEA,MAAIV,UAAJ,EAAgB;AACdQ,IAAAA,sBAAsB,GAAG,QAAzB;AACAC,IAAAA,mBAAmB,GAAG;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAAtB;AACAD,IAAAA,eAAe,GAAG,KAAlB;AACAL,IAAAA,gBAAgB,CAACO,gBAAjB,GAAoC,CAACb,cAAD,GACA,CADA,GAEAM,gBAAgB,CAACE,WAFrD;AAGD,GAPD,MAOO;AACLC,IAAAA,sBAAsB,GAAG,KAAzB;AACAC,IAAAA,mBAAmB,GAAG;AAAEI,MAAAA,UAAU,EAAE,EAAE,IAAIf,eAAe,GAAG,CAAxB;AAAd,KAAtB;AACAY,IAAAA,eAAe,GAAG,OAAlB;AACAL,IAAAA,gBAAgB,CAACS,cAAjB,GAAkC,CAACf,cAAD,GACA,CADA,GAEAM,gBAAgB,CAACE,WAFnD;AAGD;;AAED,SAAOQ,UAAU,CAACC,MAAX,CAAkB;AACvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,eAAe,EAAE,aADR;AAETC,MAAAA,IAAI,EAAE,CAFG;AAGTC,MAAAA,aAAa,EAAEZ;AAHN,KADY;AAOvBa,IAAAA,YAAY,EAAE;AACZF,MAAAA,IAAI,EAAEjB,gBAAgB,IAAIP;AADd,KAPS;AAUvB2B,IAAAA,KAAK;AACHC,MAAAA,KAAK,EAAEtB,UAAU,IAAIP,mBADlB;AAEH8B,MAAAA,UAAU,EAAE,QAFT;AAGHC,MAAAA,QAAQ,EAAE;AAHP,0CAIOf,eAJP,EAI4BZ,eAAe,GAAG,CAJ9C,wCAKQ,OALR,wCAMQ,CACTW,mBADS,CANR,UAVkB;AAqBvBiB,IAAAA,IAAI,kCACCrB,gBADD;AAEFc,MAAAA,IAAI,EAAEf,QAAQ,IAAIP;AAFhB;AArBmB,GAAlB,CAAP;AA0BD,CAnDqB,CAAtB","sourcesContent":["import { StyleSheet } from 'react-native';\nimport memoize from 'memoizee';\n\n// (Configuration constants)\nconst DEFAULT_LABEL_COLOR = '#ccc';\nconst DEFAULT_LABEL_WRAPPER_FLEX = 1;\nconst DEFAULT_LINE_COLOR = '#dad9d4';\nconst DEFAULT_UNIT_FLEX = 12;\nconst LABEL_FONT_SIZE = 12;\n\nexport default memoize(({ completeBorder, horizontal, labelColor, labelWrapperFlex, lineColor, unitFlex }) => {\n  const unitBorderStyles = {\n    borderColor: lineColor || DEFAULT_LINE_COLOR,\n    borderWidth: 1,\n  };\n  let containerFlexDirection;\n  let labelTransformation;\n  let labelMarginSide;\n\n  if (horizontal) {\n    containerFlexDirection = 'column';\n    labelTransformation = { translateX: 4 };\n    labelMarginSide = 'Top';\n    unitBorderStyles.borderRightWidth = !completeBorder\n                                      ? 0\n                                      : unitBorderStyles.borderWidth;\n  } else {\n    containerFlexDirection = 'row';\n    labelTransformation = { translateY: -(1 + LABEL_FONT_SIZE / 2) };\n    labelMarginSide = 'Right';\n    unitBorderStyles.borderTopWidth = !completeBorder\n                                    ? 0\n                                    : unitBorderStyles.borderWidth;\n  }\n\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      flex: 1,\n      flexDirection: containerFlexDirection,\n    },\n\n    labelWrapper: {\n      flex: labelWrapperFlex || DEFAULT_LABEL_WRAPPER_FLEX,\n    },\n    label: {\n      color: labelColor || DEFAULT_LABEL_COLOR,\n      fontFamily: 'Avenir',\n      fontSize: 12,\n      [`margin${labelMarginSide}`]: (LABEL_FONT_SIZE / 2),\n      textAlign: 'right',\n      transform: [\n        labelTransformation,\n      ],\n    },\n\n    unit: {\n      ...unitBorderStyles,\n      flex: unitFlex || DEFAULT_UNIT_FLEX,\n    },\n  });\n});\n"]},"metadata":{},"sourceType":"module"}