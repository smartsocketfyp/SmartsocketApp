{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleLogin = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailandPassword(username, password).catch(function (error) {\n        return _this.setState({\n          errorMessage: error.message\n        });\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.Instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, \" Login to your account\"), React.createElement(TextInput, {\n        style: styles.Key_In_Username,\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Key_In_Password,\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 5,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Forget Password\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#000000\",\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \"Forgot Password? Click \", React.createElement(Text, {\n        style: {\n          color: \"#0000FF\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }\n      }, \" here \"))), React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 5,\n          marginBottom: 5\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Sign Up\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#000000\",\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, \"Don't have an account? \", React.createElement(Text, {\n        style: {\n          color: \"#0000FF\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 52\n        }\n      }, \" Sign Up \"), \" now\")), React.createElement(TouchableOpacity, {\n        style: this.state.password == '' || this.state.username == '' ? styles.Sign_In_Button_Disabled : styles.Sign_In_Button_Enabled,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Scan Now\");\n        },\n        disabled: this.state.password == '' || this.state.username == '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.Button_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \" Log In \"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  Instructions: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Key_In_Username: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Key_In_Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Sign_In_Button_Disabled: {\n    backgroundColor: '#800000',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Sign_In_Button_Enabled: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","handleLogin","state","username","password","auth","signInWithEmailandPassword","catch","error","setState","errorMessage","message","styles","container","Instructions","Key_In_Username","Key_In_Password","alignSelf","marginTop","marginBottom","props","navigation","navigate","color","fontSize","Sign_In_Button_Disabled","Sign_In_Button_Enabled","Button_Text","Component","StyleSheet","create","textAlign","fontWeight","flex","alignItems","justifyContent","backgroundColor","height","width","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, TextInput, ScrollView, StyleSheet, TouchableOpacity, Text} from 'react-native';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n\r\nexport default class LoginScreen extends React.Component {\r\n    \r\n    handleLogin = () => {\r\n        const {username,password} = this.state;\r\n        firebase.auth().signInWithEmailandPassword(username,password).catch(error => this.setState({errorMessage: error.message})\r\n        );\r\n    };\r\n    state = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }   \r\n    \r\n    render(){\r\n\t\treturn(\r\n            <ScrollView>\r\n                <View style={styles.container}>\r\n                    <Text style = {styles.Instructions}> Login to your account</Text>\r\n                    <TextInput\r\n                        style={styles.Key_In_Username}\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChangeText={username => this.setState({username})}\r\n                    />\r\n                    \r\n                    <TextInput\r\n                        style={styles.Key_In_Password}\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChangeText={password => this.setState({password})}\r\n                        secureTextEntry\r\n                    />\r\n                    \r\n                    <TouchableOpacity\r\n                        style = {{ alignSelf: \"center\", marginTop: 5, marginBottom: 5}}\r\n                        onPress={() => this.props.navigation.navigate(\"Forget Password\")}\r\n                    >\r\n                        <Text style = {{color: \"#000000\", fontSize: 15}}>\r\n                            Forgot Password? Click <Text style = {{color: \"#0000FF\"}}> here </Text>\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style = {{ alignSelf: \"center\", marginTop: 5, marginBottom: 5}}\r\n                        onPress={() => this.props.navigation.navigate(\"Sign Up\")}\r\n                    >\r\n                        <Text style = {{color: \"#000000\", fontSize: 15}}>\r\n                            Don't have an account? <Text style = {{color: \"#0000FF\"}}> Sign Up </Text> now\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style = \r\n                        {(\r\n                            (this.state.password== '')||\r\n                            (this.state.username == '')\r\n                        ) ? styles.Sign_In_Button_Disabled : styles.Sign_In_Button_Enabled}\r\n\r\n                        //onPress={() => this.handleLogin() > this.props.navigation.push(\"Scan Now\", password)}\r\n                        onPress={() => this.props.navigation.navigate(\"Scan Now\")}\r\n                        disabled = {(this.state.password== '')||(this.state.username == '')}\r\n                    >\r\n                        <Text style = {styles.Button_Text}> Log In </Text>\r\n                    </TouchableOpacity>   \r\n                </View>\r\n            </ScrollView>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    Instructions: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Key_In_Username: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Key_In_Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Sign_In_Button_Disabled: {\r\n        backgroundColor : '#800000',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Sign_In_Button_Enabled: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}