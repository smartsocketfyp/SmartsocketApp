{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\SchedulingSetTimerScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nfunction SchedulingSetTimerScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Text_Minutes = _React$useState2[0],\n      setText_Minutes = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \" Set the time before socket switch on/off\"), React.createElement(TextInput, {\n    style: styles.Key_In_Timer,\n    placeholder: \"Time in MINUTES\",\n    value: Text_Minutes,\n    onChangeText: setText_Minutes,\n    keyboardType: 'numeric',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.Start_Button,\n    onPress: function onPress() {\n      return navigation.push('CountDown', Text_Minutes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \" Start Now \")));\n}\n\nvar styles = StyleSheet.create({\n  Instructions: {\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Key_In_Timer: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Start_Button: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});\nexport default SchedulingSetTimerScreen;","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/SchedulingSetTimerScreen.js"],"names":["React","SchedulingSetTimerScreen","navigation","useState","Text_Minutes","setText_Minutes","styles","container","Instructions","Key_In_Timer","Start_Button","push","Button_Text","StyleSheet","create","marginLeft","marginRight","marginTop","marginBottom","color","fontWeight","fontSize","flex","alignItems","justifyContent","backgroundColor","height","width","borderColor","borderWidth","borderRadius"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAGA,SAASC,wBAAT,OAAkD;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,wBACNF,KAAK,CAACG,QAAN,CAAe,EAAf,CADM;AAAA;AAAA,MACvCC,YADuC;AAAA,MACzBC,eADyB;;AAG9C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAGE,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEF,MAAM,CAACG,YADlB;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,KAAK,EAAEL,YAHX;AAII,IAAA,YAAY,EAAEC,eAJlB;AAKI,IAAA,YAAY,EAAI,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWE,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACI,YADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACS,IAAX,CAAgB,WAAhB,EAA6BP,YAA7B,CAAN;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIE,MAAM,CAACM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAXF,CADF;AAqBD;;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,YAAY,EAAE;AACZO,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,WAAW,EAAE,EAFD;AAGZC,IAAAA,SAAS,EAAE,EAHC;AAIZC,IAAAA,YAAY,EAAE,EAJF;AAKZC,IAAAA,KAAK,EAAE,MALK;AAMZC,IAAAA,UAAU,EAAE,MANA;AAOZC,IAAAA,QAAQ,EAAE;AAPE,GADiB;AAW/Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GAXoB;AAkB/BhB,EAAAA,YAAY,EAAE;AACZiB,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,KAAK,EAAG,GAFI;AAGZC,IAAAA,WAAW,EAAE,MAHD;AAIZC,IAAAA,WAAW,EAAE,CAJD;AAKZZ,IAAAA,SAAS,EAAE,EALC;AAMZC,IAAAA,YAAY,EAAE;AANF,GAlBiB;AA2B/BR,EAAAA,YAAY,EAAE;AACZe,IAAAA,eAAe,EAAG,SADN;AAEZK,IAAAA,YAAY,EAAG,CAFH;AAGZJ,IAAAA,MAAM,EAAE,EAHI;AAIZC,IAAAA,KAAK,EAAG,GAJI;AAKZV,IAAAA,SAAS,EAAE,EALC;AAMZC,IAAAA,YAAY,EAAE,GANF;AAOZK,IAAAA,UAAU,EAAE,QAPA;AAQZC,IAAAA,cAAc,EAAE;AARJ,GA3BiB;AAsC/BZ,EAAAA,WAAW,EAAE;AACTO,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,UAAU,EAAE;AAFH;AAtCkB,CAAlB,CAAf;AA6CF,eAAenB,wBAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet} from 'react-native';\r\n\r\nfunction SchedulingSetTimerScreen({ navigation }) {\r\n    const [Text_Minutes, setText_Minutes] = React.useState('');\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style = {styles.Instructions}> Set the time before socket switch on/off</Text>\r\n      \r\n        <TextInput\r\n            style={styles.Key_In_Timer}\r\n            placeholder=\"Time in MINUTES\"\r\n            value={Text_Minutes}\r\n            onChangeText={setText_Minutes}\r\n            keyboardType = {'numeric'}\r\n        />\r\n\r\n        <TouchableOpacity\r\n            style={styles.Start_Button}\r\n            onPress={() => navigation.push('CountDown', Text_Minutes)}\r\n        >\r\n            <Text style = {styles.Button_Text}> Start Now </Text>\r\n        </TouchableOpacity>   \r\n        \r\n      </View>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    Instructions: {\r\n      marginLeft: 25,\r\n      marginRight: 25,\r\n      marginTop: 50,\r\n      marginBottom: 25,\r\n      color: \"#000\", \r\n      fontWeight: \"bold\", \r\n      fontSize: 25\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Key_In_Timer: {\r\n      height: 50, \r\n      width : 300,\r\n      borderColor: 'gray', \r\n      borderWidth: 1,\r\n      marginTop: 25,\r\n      marginBottom: 25,\r\n    },\r\n\r\n    Start_Button: {\r\n      backgroundColor : '#000080',\r\n      borderRadius : 4,\r\n      height: 52,\r\n      width : 300,\r\n      marginTop: 25,\r\n      marginBottom: 250,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n\r\n});\r\n\r\nexport default SchedulingSetTimerScreen;"]},"metadata":{},"sourceType":"module"}