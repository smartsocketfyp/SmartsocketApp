{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\orange7332\\\\capstone\\\\code-18122020-combined\\\\Screens\\\\PowerUsageBarchart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { VictoryChart, VictoryGroup, VictoryBar, VictoryLegend, VictoryAxis } from \"victory-native\";\n\nvar PowerUsageBarChart = function (_React$Component) {\n  _inherits(PowerUsageBarChart, _React$Component);\n\n  var _super = _createSuper(PowerUsageBarChart);\n\n  function PowerUsageBarChart() {\n    _classCallCheck(this, PowerUsageBarChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PowerUsageBarChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = {\n        PowerConsumed: [null, {\n          x: 'Week 1',\n          y: 20\n        }]\n      };\n\n      var PowerUsageBarChart = function PowerUsageBarChart() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 5\n          }\n        }, React.createElement(VictoryChart, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }\n        }, React.createElement(VictoryAxis, {\n          label: \"Week\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        }), React.createElement(VictoryAxis, {\n          dependentAxis: true,\n          label: \"Hours\",\n          style: {\n            axislabel: {\n              padding: 35\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }), React.createElement(VictoryGroup, {\n          offset: 20,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, React.createElement(VictoryBar, {\n          data: data.PowerConsumed,\n          style: {\n            data: {\n              fill: 'blue'\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        })), React.createElement(VictoryLegend, {\n          x: Dimensions.get('screen').width / 2 - 50,\n          orientation: \"horizontal\",\n          gutter: 20,\n          data: [{\n            name: 'Power Consumed',\n            symbol: {\n              fill: 'blue'\n            }\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        })));\n      };\n    }\n  }]);\n\n  return PowerUsageBarChart;\n}(React.Component);\n\nexport { PowerUsageBarChart as default };","map":{"version":3,"sources":["C:/Users/orange7332/capstone/code-18122020-combined/Screens/PowerUsageBarchart.js"],"names":["React","VictoryChart","VictoryGroup","VictoryBar","VictoryLegend","VictoryAxis","PowerUsageBarChart","data","PowerConsumed","x","y","axislabel","padding","fill","Dimensions","get","width","name","symbol","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAAQC,YAAR,EAAsBC,YAAtB,EAAoCC,UAApC,EAAgDC,aAAhD,EAA+DC,WAA/D,QAAiF,gBAAjF;;IAGsBC,kB;;;;;;;;;;;;;6BACR;AAAA;;AACd,UAAMC,IAAI,GAAG;AACTC,QAAAA,aAAa,EAAE,CACX,IADW,EACL;AAACC,UAAAA,CAAC,EAAE,QAAJ;AAAcC,UAAAA,CAAC,EAAE;AAAjB,SADK;AADN,OAAb;;AASA,UAAMJ,kBAA4B,GAAG,SAA/BA,kBAA+B,GAAM;AACvC,eACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,WAAD;AACI,UAAA,aAAa,MADjB;AAEI,UAAA,KAAK,EAAG,OAFZ;AAGI,UAAA,KAAK,EAAG;AACJK,YAAAA,SAAS,EAAE;AACPC,cAAAA,OAAO,EAAE;AADF;AADP,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAUI,oBAAC,YAAD;AAAc,UAAA,MAAM,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACA,UAAA,IAAI,EAAEL,IAAI,CAACC,aADX;AAEA,UAAA,KAAK,EAAE;AACHD,YAAAA,IAAI,EAAC;AAACM,cAAAA,IAAI,EAAE;AAAP;AADF,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAVJ,EAmBI,oBAAC,aAAD;AACA,UAAA,CAAC,EAAIC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,CAAjC,GAAmC,EADxC;AAEA,UAAA,WAAW,EAAG,YAFd;AAGA,UAAA,MAAM,EAAI,EAHV;AAIA,UAAA,IAAI,EAAI,CACJ;AACIC,YAAAA,IAAI,EAAE,gBADV;AAEIC,YAAAA,MAAM,EAAE;AACJL,cAAAA,IAAI,EAAE;AADF;AAFZ,WADI,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnBJ,CADJ,CADA;AAqCH,OAtCD;AAuCK;;;;EAlD4Cb,KAAK,CAACmB,S;;SAAjCb,kB","sourcesContent":["import * as React from 'react';\r\nimport {Dimensions, View} from 'react-native';\r\nimport {VictoryChart, VictoryGroup, VictoryBar, VictoryLegend, VictoryAxis} from \"victory-native\";\r\n\r\n// var database = firebase.database();\r\nexport default  class PowerUsageBarChart extends React.Component {\r\n    render () {\r\nconst data = {\r\n    PowerConsumed: [\r\n        null, {x: 'Week 1', y: 20}],\r\n    // when you want to show the ideal power usage to consume, for comparison\r\n    //     IdealPowerConsumed: [ \r\n    //         {x: 'Week 1', y: 50};\r\n    //         {x: 'Week 2', y: 80};\r\n    // ]\r\n};\r\nconst PowerUsageBarChart: React.FC = () => {\r\n    return (\r\n    <View>\r\n        <VictoryChart>\r\n            <VictoryAxis label = \"Week\"/>\r\n            <VictoryAxis \r\n                dependentAxis \r\n                label = \"Hours\"\r\n                style ={{\r\n                    axislabel: {\r\n                        padding: 35,\r\n            },\r\n            }}/>\r\n            <VictoryGroup offset={20}>\r\n                <VictoryBar \r\n                data={data.PowerConsumed}\r\n                style={{\r\n                    data:{fill: 'blue',\r\n                },\r\n                }}/>\r\n                {/* </VictoryBar> */}\r\n            </VictoryGroup>\r\n            <VictoryLegend \r\n            x = {Dimensions.get('screen').width / 2-50}\r\n            orientation = \"horizontal\"\r\n            gutter = {20}\r\n            data = {[\r\n                {\r\n                    name: 'Power Consumed',\r\n                    symbol: {\r\n                        fill: 'blue',\r\n                    },\r\n                },\r\n            ]}\r\n            />\r\n        </VictoryChart>\r\n    </View>\r\n        );\r\n};\r\n    }}"]},"metadata":{},"sourceType":"module"}