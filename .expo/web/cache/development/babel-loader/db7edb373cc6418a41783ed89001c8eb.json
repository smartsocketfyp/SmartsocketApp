{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orange7332\\\\Desktop\\\\SmartsocketApp\\\\Screens\\\\SignUpScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\n\nfunction SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      fullname = _React$useState2[0],\n      setfullname = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      username = _React$useState4[0],\n      setusername = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      emailPhonenumber = _React$useState6[0],\n      setemailPhonenumber = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setpassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      confirmpassword = _React$useState10[0],\n      setconfirmpassword = _React$useState10[1];\n\n  var handleSignUp = function handleSignUp() {\n    firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password).then(function () {\n      handleVerification();\n      navigation.push(\"Email Verification\", emailPhonenumber);\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      alert(errorMessage);\n      console.log(error);\n    });\n  };\n\n  var handleVerification = function handleVerification() {\n    var user = firebase.auth().currentUser;\n    user.sendEmailVerification().then(function () {\n      alert(\"Verification email sent!\");\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      alert(errorMessage);\n      console.log(error);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \" Fill in the details below\"), React.createElement(TextInput, {\n    style: styles.Full_Name,\n    placeholder: \"Full Name*\",\n    value: fullname,\n    onChangeText: setfullname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.Username,\n    placeholder: \"Username*\",\n    value: username,\n    onChangeText: setusername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.Email_Phone,\n    placeholder: \"Email or Phone Number\",\n    value: emailPhonenumber,\n    onChangeText: setemailPhonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: password.length < 8 ? styles.Warning_Message : styles.Password_Accepted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, password.length < 8 ? 'Password must be at least 8 characters' : 'Password accepted!'), React.createElement(TextInput, {\n    style: styles.Password,\n    placeholder: \"Password*\",\n    value: password,\n    onChangeText: setpassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: password != confirmpassword ? styles.Warning_Message : styles.Password_Accepted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, password != confirmpassword ? 'Passwords do not match!' : 'Passwords match!'), React.createElement(TextInput, {\n    style: styles.Confirm_Password,\n    placeholder: \"Confirm Password*\",\n    value: confirmpassword,\n    onChangeText: setconfirmpassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.Navigation_Text,\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\",\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Have an account? \", React.createElement(Text, {\n    style: {\n      color: \"#0000FF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 42\n    }\n  }, \" Sign in \"), \" here!\")), React.createElement(TouchableOpacity, {\n    style: fullname == '' || username == '' || emailPhonenumber == '' || password == '' || confirmpassword == '' || password != confirmpassword ? styles.Sign_Up_Button_Disabled : styles.Sign_Up_Button_Enabled,\n    disabled: fullname == '' || username == '' || emailPhonenumber == '' || password == '' || confirmpassword == '' || password != confirmpassword || password.length < 8,\n    onPress: function onPress() {\n      return handleSignUp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \" Sign Up \"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Instructions: {\n    textAlign: 'center',\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25,\n    marginTop: 50,\n    marginBottom: 25\n  },\n  Full_Name: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Username: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Email_Phone: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Confirm_Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Warning_Message: {\n    color: \"#FF0000\",\n    fontWeight: \"600\",\n    marginTop: 0,\n    marginBottom: 0\n  },\n  Password_Accepted: {\n    color: \"#00FF00\",\n    fontWeight: \"600\",\n    marginTop: 0,\n    marginBottom: 0\n  },\n  Navigation_Text: {\n    alignSelf: \"center\",\n    marginTop: 5,\n    marginBottom: 5\n  },\n  Sign_Up_Button_Disabled: {\n    backgroundColor: '#800000',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Sign_Up_Button_Enabled: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["C:/Users/orange7332/Desktop/SmartsocketApp/Screens/SignUpScreen.js"],"names":["React","firebase","SignUpScreen","navigation","useState","fullname","setfullname","username","setusername","emailPhonenumber","setemailPhonenumber","password","setpassword","confirmpassword","setconfirmpassword","handleSignUp","auth","createUserWithEmailAndPassword","then","handleVerification","push","catch","error","errorMessage","message","alert","console","log","user","currentUser","sendEmailVerification","styles","container","Instructions","Full_Name","Username","Email_Phone","length","Warning_Message","Password_Accepted","Password","Confirm_Password","Navigation_Text","navigate","color","fontSize","Sign_Up_Button_Disabled","Sign_Up_Button_Enabled","Button_Text","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","textAlign","fontWeight","marginTop","marginBottom","height","width","borderColor","borderWidth","alignSelf","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet} from 'react-native';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n\r\nfunction SignUpScreen({ navigation }) {\r\n    const [fullname, setfullname] = React.useState('');\r\n    const [username, setusername] = React.useState('');\r\n    const [emailPhonenumber, setemailPhonenumber] = React.useState('');\r\n    const [password, setpassword] = React.useState('');\r\n    const [confirmpassword, setconfirmpassword] = React.useState('');\r\n\r\n    const handleSignUp = () => {\r\n        firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password)\r\n        .then(() => {\r\n            //If all issues resolved\r\n            handleVerification();\r\n            navigation.push(\"Email Verification\", emailPhonenumber);\r\n        }) \r\n        \r\n        .catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorMessage = error.message;\r\n            \r\n            alert(errorMessage);\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleVerification = () => {\r\n        var user = firebase.auth().currentUser;\r\n\r\n        user.sendEmailVerification()\r\n        .then(() => {\r\n            //If all issues resolved\r\n            alert(\"Verification email sent!\");\r\n        }) \r\n        \r\n        .catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorMessage = error.message;\r\n            alert(errorMessage);\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <Text style = {styles.Instructions}> Fill in the details below</Text>\r\n\r\n                <TextInput\r\n                    style={styles.Full_Name}\r\n                    placeholder=\"Full Name*\"\r\n                    value={fullname}\r\n                    onChangeText={setfullname}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.Username}\r\n                    placeholder=\"Username*\"\r\n                    value={username}\r\n                    onChangeText={setusername}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.Email_Phone}\r\n                    placeholder=\"Email or Phone Number\"\r\n                    value={emailPhonenumber}\r\n                    onChangeText={setemailPhonenumber}\r\n                />\r\n\r\n                <Text style={(password.length < 8) ? styles.Warning_Message : styles.Password_Accepted}> \r\n                    {(password.length < 8) ? 'Password must be at least 8 characters' : 'Password accepted!'}\r\n                </Text>\r\n\r\n                <TextInput\r\n                    style={styles.Password}\r\n                    placeholder=\"Password*\"\r\n                    value={password}\r\n                    onChangeText={setpassword}\r\n                    secureTextEntry\r\n                />\r\n\r\n                <Text style={(password != confirmpassword) ? styles.Warning_Message : styles.Password_Accepted}> \r\n                    {(password != confirmpassword) ? 'Passwords do not match!' : 'Passwords match!'}\r\n                </Text>\r\n\r\n                <TextInput\r\n                    style={styles.Confirm_Password}\r\n                    placeholder=\"Confirm Password*\"\r\n                    value={confirmpassword}\r\n                    onChangeText={setconfirmpassword}\r\n                    secureTextEntry\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style = {styles.Navigation_Text}\r\n                    onPress={() => navigation.navigate(\"Login\")}\r\n                >\r\n                    <Text style = {{color: \"#000000\", fontSize: 15}}>\r\n                        Have an account? <Text style = {{color: \"#0000FF\"}}> Sign in </Text> here!\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                \r\n                <TouchableOpacity\r\n                    style = \r\n                    {(\r\n                        (fullname == '')||\r\n                        (username == '')||\r\n                        (emailPhonenumber == '')||\r\n                        (password == '')||\r\n                        (confirmpassword == '')||\r\n                        (password != confirmpassword)\r\n                    ) ? styles.Sign_Up_Button_Disabled : styles.Sign_Up_Button_Enabled}\r\n                    \r\n                    disabled = \r\n                    {\r\n                        (fullname == '')||\r\n                        (username == '')||\r\n                        (emailPhonenumber == '')||\r\n                        (password == '')||\r\n                        (confirmpassword == '')||\r\n                        (password != confirmpassword)||\r\n                        (password.length < 8)\r\n                    } \r\n                    onPress={() => handleSignUp()}\r\n                    //onPress={() => this.props.navigation.navigate(\"Verification\")}\r\n                >\r\n                    <Text style = {styles.Button_Text}> Sign Up </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    \r\n    Instructions: {\r\n        textAlign: 'center',\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25,\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Full_Name: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Username: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Email_Phone: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Confirm_Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25, \r\n    },\r\n\r\n    Warning_Message: {\r\n        color: \"#FF0000\",\r\n        fontWeight: \"600\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n\r\n    Password_Accepted: {\r\n        color: \"#00FF00\",\r\n        fontWeight: \"600\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n\r\n    Navigation_Text: {\r\n        alignSelf: \"center\",\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    },\r\n\r\n    Sign_Up_Button_Disabled: {\r\n        backgroundColor : '#800000',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Sign_Up_Button_Enabled: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}