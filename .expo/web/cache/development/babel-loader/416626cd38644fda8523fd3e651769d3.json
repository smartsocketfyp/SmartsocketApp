{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AnyJs from \"./utils/any\";\nimport { buildNativeArray } from \"./utils/serialize\";\n\nvar FieldValue = function () {\n  function FieldValue(type, elements) {\n    _classCallCheck(this, FieldValue);\n\n    this._type = type;\n    this._elements = elements;\n  }\n\n  _createClass(FieldValue, [{\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"elements\",\n    get: function get() {\n      return this._elements;\n    }\n  }], [{\n    key: \"delete\",\n    value: function _delete() {\n      return new FieldValue(TypeFieldValueDelete);\n    }\n  }, {\n    key: \"increment\",\n    value: function increment(n) {\n      return new FieldValue(TypeFieldValueIncrement, n);\n    }\n  }, {\n    key: \"serverTimestamp\",\n    value: function serverTimestamp() {\n      return new FieldValue(TypeFieldValueTimestamp);\n    }\n  }, {\n    key: \"arrayUnion\",\n    value: function arrayUnion() {\n      for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n        elements[_key] = arguments[_key];\n      }\n\n      return new FieldValue(TypeFieldValueUnion, buildNativeArray(elements));\n    }\n  }, {\n    key: \"arrayRemove\",\n    value: function arrayRemove() {\n      for (var _len2 = arguments.length, elements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        elements[_key2] = arguments[_key2];\n      }\n\n      return new FieldValue(TypeFieldValueRemove, buildNativeArray(elements));\n    }\n  }]);\n\n  return FieldValue;\n}();\n\nexport { FieldValue as default };\nexport var TypeFieldValueDelete = 'delete';\nexport var TypeFieldValueIncrement = 'increment';\nexport var TypeFieldValueRemove = 'remove';\nexport var TypeFieldValueUnion = 'union';\nexport var TypeFieldValueTimestamp = 'timestamp';","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/modules/firestore/FieldValue.js"],"names":["AnyJs","buildNativeArray","FieldValue","type","elements","_type","_elements","TypeFieldValueDelete","n","TypeFieldValueIncrement","TypeFieldValueTimestamp","TypeFieldValueUnion","TypeFieldValueRemove"],"mappings":";;AAIA,OAAOA,KAAP;AACA,SAASC,gBAAT;;IAEqBC,U;AACnB,sBAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AAC1B,SAAKC,KAAL,GAAaF,IAAb;AACA,SAAKG,SAAL,GAAiBF,QAAjB;AACD;;;;wBAEU;AACT,aAAO,KAAKC,KAAZ;AACD;;;wBAEc;AACb,aAAO,KAAKC,SAAZ;AACD;;;8BAEe;AACd,aAAO,IAAIJ,UAAJ,CAAeK,oBAAf,CAAP;AACD;;;8BAEgBC,C,EAAG;AAClB,aAAO,IAAIN,UAAJ,CAAeO,uBAAf,EAAwCD,CAAxC,CAAP;AACD;;;sCAEwB;AACvB,aAAO,IAAIN,UAAJ,CAAeQ,uBAAf,CAAP;AACD;;;iCAE8B;AAAA,wCAAVN,QAAU;AAAVA,QAAAA,QAAU;AAAA;;AAI7B,aAAO,IAAIF,UAAJ,CAAeS,mBAAf,EAAoCV,gBAAgB,CAACG,QAAD,CAApD,CAAP;AACD;;;kCAE+B;AAAA,yCAAVA,QAAU;AAAVA,QAAAA,QAAU;AAAA;;AAI9B,aAAO,IAAIF,UAAJ,CAAeU,oBAAf,EAAqCX,gBAAgB,CAACG,QAAD,CAArD,CAAP;AACD;;;;;;SAtCkBF,U;AAyCrB,OAAO,IAAMK,oBAAoB,GAAG,QAA7B;AACP,OAAO,IAAME,uBAAuB,GAAG,WAAhC;AACP,OAAO,IAAMG,oBAAoB,GAAG,QAA7B;AACP,OAAO,IAAMD,mBAAmB,GAAG,OAA5B;AACP,OAAO,IAAMD,uBAAuB,GAAG,WAAhC","sourcesContent":["/**\n * \n * FieldValue representation wrapper\n */\nimport AnyJs from './utils/any';\nimport { buildNativeArray } from './utils/serialize'; // TODO: Salakar: Refactor in v6\n\nexport default class FieldValue {\n  constructor(type, elements) {\n    this._type = type;\n    this._elements = elements;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get elements() {\n    return this._elements;\n  }\n\n  static delete() {\n    return new FieldValue(TypeFieldValueDelete);\n  }\n\n  static increment(n) {\n    return new FieldValue(TypeFieldValueIncrement, n);\n  }\n\n  static serverTimestamp() {\n    return new FieldValue(TypeFieldValueTimestamp);\n  }\n\n  static arrayUnion(...elements) {\n    // TODO Salakar: v6: validate elements, any primitive or FirestoreReference allowed\n    // TODO Salakar: v6: explicitly deny use of serverTimestamp - only allowed on set/update\n    // TODO Salakar: v6: explicitly deny use of nested arrays - not supported on sdk\n    return new FieldValue(TypeFieldValueUnion, buildNativeArray(elements));\n  }\n\n  static arrayRemove(...elements) {\n    // TODO Salakar: v6: validate elements, any primitive or FirestoreReference allowed\n    // TODO Salakar: v6: explicitly deny use of serverTimestamp - only allowed on set/update\n    // TODO Salakar: v6: explicitly deny use of nested arrays - not supported on sdk\n    return new FieldValue(TypeFieldValueRemove, buildNativeArray(elements));\n  }\n\n}\nexport const TypeFieldValueDelete = 'delete';\nexport const TypeFieldValueIncrement = 'increment';\nexport const TypeFieldValueRemove = 'remove';\nexport const TypeFieldValueUnion = 'union';\nexport const TypeFieldValueTimestamp = 'timestamp';"]},"metadata":{},"sourceType":"module"}