{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\Fong JY\\\\NUS\\\\Year 4 Semester 2\\\\EE4002D - Design Capstone\\\\Software Code\\\\code-18122020-combined\\\\Screens\\\\SchedulingSetTimerScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport 'firebase/database';\n\nfunction SchedulingSetTimerScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var data = route.params;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Time_before_finish = _React$useState2[0],\n      setTime_before_finish = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      SocketOn = _React$useState4[0],\n      setSocketOn = _React$useState4[1];\n\n  var handleSendData = function handleSendData(_ref2) {\n    var SocketOn = _ref2.SocketOn,\n        Time_before_finish = _ref2.Time_before_finish;\n    setSocketOn(true);\n    var user = firebase.auth().currentUser;\n    firebase.database().ref('/Socket ID/' + data.slice(17, 20)).update({\n      SocketOn: SocketOn,\n      Time_before_finish: Time_before_finish,\n      User_Email: user.email\n    }).then(function (data) {\n      console.log('data', data);\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \" Set the time before Socket No.\", data.slice(17, 20), \" switches off\"), React.createElement(TextInput, {\n    style: styles.Key_In_Timer,\n    placeholder: \"Time in MINUTES\",\n    value: Time_before_finish,\n    onChangeText: setTime_before_finish,\n    keyboardType: 'numeric',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.Start_Button,\n    onPress: function onPress() {\n      return handleSendData({\n        SocketOn: SocketOn,\n        Time_before_finish: Time_before_finish\n      }) > navigation.push('Countdown', {\n        Time_before_finish: Time_before_finish,\n        data: data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \" Start Now \")));\n}\n\nvar styles = StyleSheet.create({\n  Instructions: {\n    textAlign: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"300\",\n    fontSize: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Key_In_Timer: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Start_Button: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});\nexport default SchedulingSetTimerScreen;","map":{"version":3,"sources":["C:/Users/fong/Desktop/Fong JY/NUS/Year 4 Semester 2/EE4002D - Design Capstone/Software Code/code-18122020-combined/Screens/SchedulingSetTimerScreen.js"],"names":["React","firebase","SchedulingSetTimerScreen","route","navigation","data","params","useState","Time_before_finish","setTime_before_finish","SocketOn","setSocketOn","handleSendData","user","auth","currentUser","database","ref","slice","update","User_Email","email","then","console","log","catch","error","styles","container","Instructions","Key_In_Timer","Start_Button","push","Button_Text","StyleSheet","create","textAlign","marginLeft","marginRight","marginTop","marginBottom","color","fontWeight","fontSize","flex","alignItems","justifyContent","backgroundColor","height","width","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport 'firebase/database';\r\n\r\nfunction SchedulingSetTimerScreen({ route, navigation }) {\r\n    let data = route.params;\r\n    const [Time_before_finish, setTime_before_finish] = React.useState('');\r\n    const [SocketOn, setSocketOn] = React.useState(true);\r\n    \r\n    const handleSendData = ({SocketOn, Time_before_finish}) => {\r\n\r\n        setSocketOn(true);\r\n        var user = firebase.auth().currentUser;\r\n        \r\n        firebase.database().ref('/Socket ID/' + data.slice(17,20)).update({\r\n            SocketOn,\r\n            Time_before_finish,\r\n            User_Email: user.email,\r\n        }).then((data) => {\r\n            console.log('data', data)\r\n        }).catch((error) => {\r\n            console.log('error', error)\r\n        })\r\n    }\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style = {styles.Instructions}> Set the time before Socket No.{data.slice(17,20)} switches off</Text>\r\n      \r\n        <TextInput\r\n            style={styles.Key_In_Timer}\r\n            placeholder=\"Time in MINUTES\"\r\n            value={Time_before_finish}\r\n            onChangeText={setTime_before_finish}\r\n            keyboardType = {'numeric'}\r\n        />\r\n\r\n        <TouchableOpacity\r\n            style={styles.Start_Button}\r\n            onPress={() => handleSendData({SocketOn, Time_before_finish}) > navigation.push('Countdown', {Time_before_finish, data})}\r\n        >\r\n            <Text style = {styles.Button_Text}> Start Now </Text>\r\n        </TouchableOpacity>   \r\n        \r\n      </View>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    Instructions: {\r\n      textAlign: 'center',\r\n      marginLeft: 25,\r\n      marginRight: 25,\r\n      marginTop: 50,\r\n      marginBottom: 25,\r\n      color: \"#000\", \r\n      fontWeight: \"300\", \r\n      fontSize: 20\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Key_In_Timer: {\r\n      height: 50, \r\n      width : 300,\r\n      borderColor: 'gray', \r\n      borderWidth: 1,\r\n      marginTop: 25,\r\n      marginBottom: 25,\r\n    },\r\n\r\n    Start_Button: {\r\n      backgroundColor : '#000080',\r\n      borderRadius : 4,\r\n      height: 52,\r\n      width : 300,\r\n      marginTop: 25,\r\n      marginBottom: 250,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n\r\n});\r\n\r\nexport default SchedulingSetTimerScreen;"]},"metadata":{},"sourceType":"module"}