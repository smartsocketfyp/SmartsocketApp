{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isObject, deepGet, deepExists } from \"../../utils\";\n\nvar DataSnapshot = function () {\n  function DataSnapshot(ref, snapshot) {\n    _classCallCheck(this, DataSnapshot);\n\n    this.key = snapshot.key;\n\n    if (ref.key !== snapshot.key) {\n      this.ref = ref.child(snapshot.key);\n    } else {\n      this.ref = ref;\n    }\n\n    this._value = snapshot.value;\n    this._priority = snapshot.priority === undefined ? null : snapshot.priority;\n    this._childKeys = snapshot.childKeys || [];\n  }\n\n  _createClass(DataSnapshot, [{\n    key: \"val\",\n    value: function val() {\n      if (isObject(this._value) || Array.isArray(this._value)) {\n        return JSON.parse(JSON.stringify(this._value));\n      }\n\n      return this._value;\n    }\n  }, {\n    key: \"exportVal\",\n    value: function exportVal() {\n      var value = this._value;\n\n      if (isObject(this._value) || Array.isArray(this._value)) {\n        value = JSON.parse(JSON.stringify(this._value));\n      }\n\n      return {\n        '.value': value,\n        '.priority': this._priority\n      };\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      var value = deepGet(this._value, path);\n      if (value === undefined) value = null;\n      var childRef = this.ref.child(path);\n      return new DataSnapshot(childRef, {\n        value: value,\n        key: childRef.key,\n        exists: value !== null,\n        childKeys: isObject(value) && value !== null ? Object.keys(value) : []\n      });\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return this._value !== null;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(action) {\n      if (!this._childKeys.length) return false;\n      var cancelled = false;\n\n      for (var i = 0, len = this._childKeys.length; i < len; i++) {\n        var key = this._childKeys[i];\n        var childSnapshot = this.child(key);\n        var returnValue = action(childSnapshot);\n\n        if (returnValue === true) {\n          cancelled = true;\n          break;\n        }\n      }\n\n      return cancelled;\n    }\n  }, {\n    key: \"getPriority\",\n    value: function getPriority() {\n      return this._priority;\n    }\n  }, {\n    key: \"hasChild\",\n    value: function hasChild(path) {\n      return deepExists(this._value, path);\n    }\n  }, {\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return this.numChildren() > 0;\n    }\n  }, {\n    key: \"numChildren\",\n    value: function numChildren() {\n      if (!isObject(this._value)) return 0;\n      return Object.keys(this._value).length;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.val();\n    }\n  }]);\n\n  return DataSnapshot;\n}();\n\nexport { DataSnapshot as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/modules/database/DataSnapshot.js"],"names":["isObject","deepGet","deepExists","DataSnapshot","ref","snapshot","key","child","_value","value","_priority","priority","undefined","_childKeys","childKeys","Array","isArray","JSON","parse","stringify","path","childRef","exists","Object","keys","action","length","cancelled","i","len","childSnapshot","returnValue","numChildren","val"],"mappings":"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","sourcesContent":["/**\n * \n * DataSnapshot representation wrapper\n */\nimport { isObject, deepGet, deepExists } from '../../utils';\n\n/**\n * @class DataSnapshot\n * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot\n */\nexport default class DataSnapshot {\n  constructor(ref, snapshot) {\n    this.key = snapshot.key;\n\n    if (ref.key !== snapshot.key) {\n      this.ref = ref.child(snapshot.key);\n    } else {\n      this.ref = ref;\n    } // internal use only\n\n\n    this._value = snapshot.value;\n    this._priority = snapshot.priority === undefined ? null : snapshot.priority;\n    this._childKeys = snapshot.childKeys || [];\n  }\n  /**\n   * Extracts a JavaScript value from a DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#val\n   * @returns {any}\n   */\n\n\n  val() {\n    // clone via JSON stringify/parse - prevent modification of this._value\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      return JSON.parse(JSON.stringify(this._value));\n    }\n\n    return this._value;\n  }\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The exportVal() method is similar to val(), except priority information is\n   * included (if available), making it suitable for backing up your data.\n   *\n   * @return {{'.value': *, '.priority': *}}\n   */\n\n\n  exportVal() {\n    let value = this._value;\n\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      value = JSON.parse(JSON.stringify(this._value));\n    }\n\n    return {\n      '.value': value,\n      '.priority': this._priority\n    };\n  }\n  /**\n   * Gets another DataSnapshot for the location at the specified relative path.\n   * @param path\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @returns {Snapshot}\n   */\n\n\n  child(path) {\n    // TODO validate path is a string\n    let value = deepGet(this._value, path);\n    if (value === undefined) value = null;\n    const childRef = this.ref.child(path);\n    return new DataSnapshot(childRef, {\n      value,\n      key: childRef.key,\n      exists: value !== null,\n      // TODO this is wrong - child keys needs to be the ordered keys, from FB\n      // TODO potential solution is build up a tree/map of a snapshot and its children\n      // TODO natively and send that back to JS to be use in this class.\n      // null check to keep flow happy even though isObject already does this\n      childKeys: isObject(value) && value !== null ? Object.keys(value) : []\n    });\n  }\n  /**\n   * Returns true if this DataSnapshot contains any data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#exists\n   * @returns {boolean}\n   */\n\n\n  exists() {\n    return this._value !== null;\n  }\n  /**\n   * Enumerates the top-level children in the DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @param action\n   */\n\n\n  forEach(action) {\n    if (!this._childKeys.length) return false;\n    let cancelled = false;\n\n    for (let i = 0, len = this._childKeys.length; i < len; i++) {\n      const key = this._childKeys[i];\n      const childSnapshot = this.child(key);\n      const returnValue = action(childSnapshot);\n\n      if (returnValue === true) {\n        cancelled = true;\n        break;\n      }\n    }\n\n    return cancelled;\n  }\n  /**\n   * Gets the priority value of the data in this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#getPriority\n   * @returns {String|Number|null}\n   */\n\n\n  getPriority() {\n    return this._priority;\n  }\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChild\n   * @param path\n   * @returns {Boolean}\n   */\n\n\n  hasChild(path) {\n    return deepExists(this._value, path);\n  }\n  /**\n   * Returns whether or not the DataSnapshot has any non-null child properties.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChildren\n   * @returns {boolean}\n   */\n\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n  /**\n   * Returns the number of child properties of this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#numChildren\n   * @returns {Number}\n   */\n\n\n  numChildren() {\n    if (!isObject(this._value)) return 0;\n    return Object.keys(this._value).length;\n  }\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#toJSON\n   * @returns {any}\n   */\n\n\n  toJSON() {\n    return this.val();\n  }\n\n}"]},"metadata":{},"sourceType":"module"}