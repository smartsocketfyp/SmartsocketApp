{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\CameraScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nfunction CameraScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setScanned(true);\n    navigation.navigate(\"Connected\");\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \" Look for a socket with a QR code\"), React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: styles.camerasize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), scanned && React.createElement(Button, {\n    title: 'Tap to Scan Again',\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Instructions: {\n    textAlign: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 10,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  camerasize: {\n    height: 300,\n    width: 300\n  }\n});\nexport default CameraScreen;","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/CameraScreen.js"],"names":["React","useState","useEffect","BarCodeScanner","CameraScreen","navigation","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","navigate","styles","container","Instructions","undefined","camerasize","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","textAlign","marginLeft","marginRight","marginTop","marginBottom","color","fontWeight","fontSize","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,SAASC,YAAT,OAAsC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACQJ,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,MAC3BK,aAD2B;AAAA,MACZC,gBADY;;AAAA,mBAEJN,QAAQ,CAAC,KAAD,CAFJ;AAAA;AAAA,MAE3BO,OAF2B;AAAA,MAElBC,UAFkB;;AAIlCP,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,cAAc,CAACO,uBAAf,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;AAECJ,cAAAA,gBAAgB,CAACI,MAAM,KAAK,SAAZ,CAAhB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALM,EAKJ,EALI,CAAT;;AAOA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAoB;AAAA,QAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC7CL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,UAAU,CAACU,QAAX,CAAoB,WAApB;AACH,GAHD;;AAKA,MAAIT,aAAa,KAAK,IAAtB,EAA4B;AACxB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAP;AACH;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AAED,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,EAGI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAEV,OAAO,GAAGW,SAAH,GAAeP,oBAD5C;AAEI,IAAA,KAAK,EAAEI,MAAM,CAACI,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOKZ,OAAO,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,mBAAf;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPhB,CADA;AAaD;;AAEH,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAQ7BR,EAAAA,YAAY,EAAE;AACVS,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,WAAW,EAAE,EAHH;AAIVC,IAAAA,SAAS,EAAE,EAJD;AAKVC,IAAAA,YAAY,EAAE,EALJ;AAMVC,IAAAA,KAAK,EAAE,MANG;AAOVC,IAAAA,UAAU,EAAE,MAPF;AAQVC,IAAAA,QAAQ,EAAE;AARA,GARe;AAmB7Bd,EAAAA,UAAU,EAAC;AACPe,IAAAA,MAAM,EAAE,GADD;AAEPC,IAAAA,KAAK,EAAE;AAFA;AAnBkB,CAAlB,CAAf;AAyBA,eAAehC,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Button, View, Text, StyleSheet} from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nfunction CameraScreen( {navigation} ) {\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [scanned, setScanned] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n          const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n          setHasPermission(status === 'granted');\r\n        })();\r\n      }, []);\r\n\r\n    const handleBarCodeScanned = ({ type, data }) => {\r\n        setScanned(true);\r\n        navigation.navigate(\"Connected\")\r\n    };\r\n\r\n    if (hasPermission === null) {\r\n        return <Text>Requesting for camera permission</Text>;\r\n    }\r\n    if (hasPermission === false) {\r\n        return <Text>No access to camera</Text>;\r\n    }\r\n    \r\n    return (\r\n    <View style={styles.container}>\r\n        <Text style = {styles.Instructions}> Look for a socket with a QR code</Text>\r\n\r\n        <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n            style={styles.camerasize}\r\n        />\r\n        {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n\r\n    </View>\r\n      \r\n    );\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Instructions: {\r\n        textAlign: 'center',\r\n        marginLeft: 25,\r\n        marginRight: 25,\r\n        marginTop: 10,\r\n        marginBottom: 25,\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25\r\n    },\r\n\r\n    camerasize:{\r\n        height: 300,\r\n        width: 300,\r\n      },\r\n});\r\n\r\nexport default CameraScreen;"]},"metadata":{},"sourceType":"module"}