{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orange7332\\\\capstone\\\\code-18122020-combined\\\\Screens\\\\LoginScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setusername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setpassword = _React$useState4[1];\n\n  var handleGoogleLogin = function handleGoogleLogin() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      var token = result.credential.accessToken;\n      var user = result.user;\n      navigation.navigate(\"Scan Now\");\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    firebase.auth().signInWithEmailAndPassword(username, password).then(function () {\n      var user = firebase.auth().currentUser;\n      var UserVerified = user.emailVerified;\n\n      if (UserVerified) {\n        navigation.navigate(\"Scan Now\");\n      } else {\n        alert(\"Email not verified, please sign up again\");\n      }\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      alert(errorMessage);\n      console.log(error);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \" Login to your account\"), React.createElement(TextInput, {\n    style: styles.Key_In_Username,\n    placeholder: \"Email or Phone Number\",\n    value: username,\n    onChangeText: setusername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.Key_In_Password,\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: setpassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.Navigation_Text,\n    onPress: function onPress() {\n      return navigation.navigate(\"Forget Password\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\",\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Forgot Password? Click \", React.createElement(Text, {\n    style: {\n      color: \"#0000FF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 48\n    }\n  }, \" here \"))), React.createElement(TouchableOpacity, {\n    style: styles.Navigation_Text,\n    onPress: function onPress() {\n      return navigation.navigate(\"Sign Up\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\",\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? \", React.createElement(Text, {\n    style: {\n      color: \"#0000FF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 48\n    }\n  }, \" Sign up \"), \" now!\")), React.createElement(TouchableOpacity, {\n    style: password == '' || username == '' ? styles.Sign_In_Button_Disabled : styles.Sign_In_Button_Enabled,\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    disabled: password == '' || username == '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \" Log In \")), React.createElement(TouchableOpacity, {\n    style: styles.FB_Button,\n    onPress: function onPress() {\n      return handleFBLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \" Log In with Facebook\")), React.createElement(TouchableOpacity, {\n    style: styles.Google_Button,\n    onPress: function onPress() {\n      return handleGoogleLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text_Google,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \" Log In with Google\"))));\n}\n\nvar styles = StyleSheet.create({\n  Instructions: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Key_In_Username: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Key_In_Password: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Navigation_Text: {\n    alignSelf: \"center\",\n    marginTop: 5,\n    marginBottom: 5\n  },\n  Sign_In_Button_Disabled: {\n    backgroundColor: '#800000',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Sign_In_Button_Enabled: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  FB_Button: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 92,\n    width: 300,\n    marginTop: 200,\n    marginBottom: 100,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Google_Button: {\n    backgroundColor: '#A0A0A0',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  },\n  Button_Text_Google: {\n    color: \"#000\",\n    fontWeight: \"600\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/orange7332/capstone/code-18122020-combined/Screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","navigation","useState","username","setusername","password","setpassword","handleGoogleLogin","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","token","credential","accessToken","user","navigate","handleLogin","signInWithEmailAndPassword","currentUser","UserVerified","emailVerified","alert","catch","error","errorMessage","message","console","log","styles","container","Instructions","Key_In_Username","Key_In_Password","Navigation_Text","color","fontSize","Sign_In_Button_Disabled","Sign_In_Button_Enabled","Button_Text","FB_Button","handleFBLogin","Google_Button","Button_Text_Google","StyleSheet","create","textAlign","marginTop","marginBottom","fontWeight","flex","alignItems","justifyContent","backgroundColor","height","width","borderColor","borderWidth","alignSelf","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, TextInput, ScrollView, StyleSheet, TouchableOpacity, Text} from 'react-native';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n\r\nfunction LoginScreen({ navigation }) {\r\n    const [username, setusername] = React.useState('');\r\n    const [password, setpassword] = React.useState('');\r\n\r\n    // const handleFBLogin = () => {\r\n    //     // Sign in using a popup.\r\n    //     var provider = new firebase.auth.FacebookAuthProvider();\r\n    //     provider.addScope('user_birthday');\r\n    //     firebase.auth().signInWithPopup(provider).then(function(result) {\r\n    //     // This gives you a Facebook Access Token.\r\n    //     var token = result.credential.accessToken;\r\n    //     // The signed-in user info.\r\n    //     var user = result.user;\r\n\r\n    //     navigation.navigate(\"Scan Now\");\r\n    //     });\r\n    // }\r\n\r\n    const handleGoogleLogin = () => {\r\n        //Using popup\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        provider.addScope('profile');\r\n        provider.addScope('email');\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n        // This gives you a Google Access Token.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n\r\n        navigation.navigate(\"Scan Now\");\r\n        });\r\n\r\n        // check emulator for this\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        firebase.auth().signInWithEmailAndPassword(username, password)\r\n        .then(() => {\r\n            //If all issues resolved\r\n            var user = firebase.auth().currentUser;\r\n            var UserVerified = user.emailVerified;\r\n\r\n            if(UserVerified){\r\n                navigation.navigate(\"Scan Now\");\r\n            }\r\n            \r\n            else{\r\n                alert(\"Email not verified, please sign up again\")\r\n            }\r\n        }) \r\n        \r\n        .catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorMessage = error.message;\r\n            \r\n            alert(errorMessage);\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <Text style = {styles.Instructions}> Login to your account</Text>\r\n                <TextInput\r\n                    style={styles.Key_In_Username}\r\n                    placeholder=\"Email or Phone Number\"\r\n                    value={username}\r\n                    onChangeText={setusername}\r\n                />\r\n                \r\n                <TextInput\r\n                    style={styles.Key_In_Password}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={setpassword}\r\n                    secureTextEntry\r\n                />\r\n                \r\n                <TouchableOpacity\r\n                    style = {styles.Navigation_Text}\r\n                    onPress={() => navigation.navigate(\"Forget Password\")}\r\n                >\r\n                    <Text style = {{color: \"#000000\", fontSize: 15}}>\r\n                        Forgot Password? Click <Text style = {{color: \"#0000FF\"}}> here </Text>\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style = {styles.Navigation_Text}\r\n                    onPress={() => navigation.navigate(\"Sign Up\")}\r\n                >\r\n                    <Text style = {{color: \"#000000\", fontSize: 15}}>\r\n                        Don't have an account? <Text style = {{color: \"#0000FF\"}}> Sign up </Text> now!\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style = \r\n                    {(\r\n                        (password== '')||\r\n                        (username == '')\r\n                    ) ? styles.Sign_In_Button_Disabled : styles.Sign_In_Button_Enabled}\r\n                    \r\n                    onPress={() => handleLogin() }\r\n                    //onPress={() => this.props.navigation.navigate(\"Scan Now\")}\r\n                    disabled = {(password== '')||(username == '')}\r\n                >\r\n                    <Text style = {styles.Button_Text}> Log In </Text>\r\n                </TouchableOpacity> \r\n\r\n                <TouchableOpacity\r\n                    style = {styles.FB_Button}\r\n                    \r\n                    onPress={() => handleFBLogin() }\r\n                >\r\n                    <Text style = {styles.Button_Text}> Log In with Facebook</Text>\r\n                </TouchableOpacity> \r\n\r\n                <TouchableOpacity\r\n                    style = {styles.Google_Button}\r\n                    \r\n                    onPress={() => handleGoogleLogin() }\r\n                >\r\n                    <Text style = {styles.Button_Text_Google}> Log In with Google</Text>\r\n                </TouchableOpacity>   \r\n            </View>\r\n        </ScrollView>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    Instructions: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Key_In_Username: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Key_In_Password: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Navigation_Text: {\r\n        alignSelf: \"center\",\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    },\r\n\r\n    Sign_In_Button_Disabled: {\r\n        backgroundColor : '#800000',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Sign_In_Button_Enabled: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    FB_Button: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 92,\r\n        width : 300,\r\n        marginTop: 200,\r\n        marginBottom: 100,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Google_Button: {\r\n        backgroundColor : '#A0A0A0',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    },\r\n\r\n    Button_Text_Google: {\r\n        color: \"#000\",\r\n        fontWeight: \"600\"\r\n    }\r\n});\r\n\r\nexport default LoginScreen;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}