{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\ForgetPasswordScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar ForgetPasswordScreen = function (_React$Component) {\n  _inherits(ForgetPasswordScreen, _React$Component);\n\n  var _super = _createSuper(ForgetPasswordScreen);\n\n  function ForgetPasswordScreen() {\n    var _this;\n\n    _classCallCheck(this, ForgetPasswordScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ForgetPasswordScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.Instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, \" Key in your email\"), React.createElement(TextInput, {\n        style: styles.Key_In_email,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.Submit_Button,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"ResetPassword\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.Button_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, \" Submit \"))));\n    }\n  }]);\n\n  return ForgetPasswordScreen;\n}(React.Component);\n\nexport { ForgetPasswordScreen as default };\nvar styles = StyleSheet.create({\n  Instructions: {\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Key_In_email: {\n    height: 50,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 25,\n    marginBottom: 25\n  },\n  Submit_Button: {\n    backgroundColor: '#000080',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/ForgetPasswordScreen.js"],"names":["React","ForgetPasswordScreen","state","email","styles","container","Instructions","Key_In_email","setState","Submit_Button","props","navigation","navigate","Button_Text","Component","StyleSheet","create","marginLeft","marginRight","marginTop","marginBottom","color","fontWeight","fontSize","flex","alignItems","justifyContent","backgroundColor","height","width","borderColor","borderWidth","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;IAGqBC,oB;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;6BAIA;AAAA;;AACV,aACU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAGI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEF,MAAM,CAACG,YADlB;AAEI,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAFtB;AAGI,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACK,QAAL,CAAc;AAACL,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAJ;AAAA,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EASI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEC,MAAM,CAACK,aADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,eAA/B,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIR,MAAM,CAACS,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CATJ,CADJ,CADV;AAuBA;;;;EA7BgDb,KAAK,CAACc,S;;SAAnCb,oB;AAgCrB,IAAMG,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,YAAY,EAAE;AACVW,IAAAA,UAAU,EAAE,EADF;AAEVC,IAAAA,WAAW,EAAE,EAFH;AAGVC,IAAAA,SAAS,EAAE,EAHD;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVC,IAAAA,KAAK,EAAE,MALG;AAMVC,IAAAA,UAAU,EAAE,MANF;AAOVC,IAAAA,QAAQ,EAAE;AAPA,GADe;AAW7BlB,EAAAA,SAAS,EAAE;AACPmB,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GAXkB;AAkB7BpB,EAAAA,YAAY,EAAE;AACVqB,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAG,GAFE;AAGVC,IAAAA,WAAW,EAAE,MAHH;AAIVC,IAAAA,WAAW,EAAE,CAJH;AAKVZ,IAAAA,SAAS,EAAE,EALD;AAMVC,IAAAA,YAAY,EAAE;AANJ,GAlBe;AA2B7BX,EAAAA,aAAa,EAAE;AACXkB,IAAAA,eAAe,EAAG,SADP;AAEXK,IAAAA,YAAY,EAAG,CAFJ;AAGXJ,IAAAA,MAAM,EAAE,EAHG;AAIXC,IAAAA,KAAK,EAAG,GAJG;AAKXV,IAAAA,SAAS,EAAE,EALA;AAMXC,IAAAA,YAAY,EAAE,GANH;AAOXK,IAAAA,UAAU,EAAE,QAPD;AAQXC,IAAAA,cAAc,EAAE;AARL,GA3Bc;AAsC7Bb,EAAAA,WAAW,EAAE;AACTQ,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,UAAU,EAAE;AAFH;AAtCgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport {View, TextInput, ScrollView, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\n\r\nexport default class ForgetPasswordScreen extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n    }\r\n    \r\n    render(){\r\n\t\treturn(\r\n            <ScrollView>\r\n                <View style={styles.container}>\r\n                    <Text style = {styles.Instructions}> Key in your email</Text>\r\n                    \r\n                    <TextInput\r\n                        style={styles.Key_In_email}\r\n                        value={this.state.email}\r\n                        onChangeText={email => this.setState({email})}                    \r\n                    />\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.Submit_Button}\r\n                        onPress={() => this.props.navigation.navigate(\"ResetPassword\")}\r\n                    >\r\n                        <Text style = {styles.Button_Text}> Submit </Text>\r\n                    </TouchableOpacity>   \r\n\r\n                </View>\r\n            </ScrollView>\r\n            \r\n            \r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    Instructions: {\r\n        marginLeft: 25,\r\n        marginRight: 25,\r\n        marginTop: 50,\r\n        marginBottom: 25,\r\n        color: \"#000\", \r\n        fontWeight: \"bold\", \r\n        fontSize: 25\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Key_In_email: {\r\n        height: 50, \r\n        width : 300,\r\n        borderColor: 'gray', \r\n        borderWidth: 1,\r\n        marginTop: 25,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    Submit_Button: {\r\n        backgroundColor : '#000080',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 250,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}