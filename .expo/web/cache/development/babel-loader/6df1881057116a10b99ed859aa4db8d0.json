{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\orange7332\\\\Desktop\\\\SmartsocketApp\\\\node_modules\\\\react-native-charts\\\\src\\\\components\\\\Bar\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\n\nvar Bar = function (_Component) {\n  _inherits(Bar, _Component);\n\n  var _super = _createSuper(Bar);\n\n  function Bar(props) {\n    var _this;\n\n    _classCallCheck(this, Bar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      valueScale: new Animated.Value(props.initialValueScale)\n    };\n    return _this;\n  }\n\n  _createClass(Bar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animateValueScale();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      var maxValueWillChange = nextProps.maxValue !== this.props.maxValue;\n      var valueWillChange = nextProps.value !== this.props.value;\n      var shouldAnimate = maxValueWillChange || valueWillChange;\n\n      if (shouldAnimate) {\n        this.animateValueScale();\n      }\n    }\n  }, {\n    key: \"getStyles\",\n    value: function getStyles() {\n      var _this$props = this.props,\n          fillColor = _this$props.fillColor,\n          horizontal = _this$props.horizontal,\n          maxValue = _this$props.maxValue,\n          value = _this$props.value;\n      return styles({\n        fillColor: fillColor,\n        horizontal: horizontal,\n        maxValue: maxValue,\n        value: value,\n        valueScale: this.state.valueScale\n      });\n    }\n  }, {\n    key: \"animateValueScale\",\n    value: function animateValueScale() {\n      var _this$props2 = this.props,\n          destinationValueScale = _this$props2.destinationValueScale,\n          initialValueScale = _this$props2.initialValueScale,\n          valueScaleSpringFriction = _this$props2.valueScaleSpringFriction;\n      this.state.valueScale.setValue(initialValueScale);\n      Animated.spring(this.state.valueScale, {\n        friction: valueScaleSpringFriction,\n        toValue: destinationValueScale\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      return React.createElement(View, {\n        style: [this.getStyles().container, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getStyles().maximum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getStyles().value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Bar;\n}(Component);\n\nBar.propTypes = {\n  destinationValueScale: PropTypes.number.isRequired,\n  fillColor: PropTypes.string.isRequired,\n  horizontal: PropTypes.bool,\n  initialValueScale: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  style: View.propTypes.style,\n  value: PropTypes.number.isRequired,\n  valueScaleSpringFriction: PropTypes.number.isRequired\n};\nBar.defaultProps = {\n  destinationValueScale: 1,\n  fillColor: '#00b5ec',\n  initialValueScale: 0,\n  valueScaleSpringFriction: 5\n};\nexport { Bar as default };","map":{"version":3,"sources":["C:/Users/orange7332/Desktop/SmartsocketApp/node_modules/react-native-charts/src/components/Bar/index.js"],"names":["React","Component","PropTypes","styles","Bar","props","state","valueScale","Animated","Value","initialValueScale","animateValueScale","nextProps","maxValueWillChange","maxValue","valueWillChange","value","shouldAnimate","fillColor","horizontal","destinationValueScale","valueScaleSpringFriction","setValue","spring","friction","toValue","start","style","getStyles","container","maximum","propTypes","number","isRequired","string","bool","View","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Animated, View } from 'react-native';\nimport styles from './styles';\n\nexport default class Bar extends Component {\n  static propTypes = {\n    destinationValueScale: PropTypes.number.isRequired,\n    fillColor: PropTypes.string.isRequired,\n    horizontal: PropTypes.bool,\n    initialValueScale: PropTypes.number.isRequired,\n    maxValue: PropTypes.number.isRequired,\n    style: View.propTypes.style,\n    value: PropTypes.number.isRequired,\n    valueScaleSpringFriction: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    destinationValueScale: 1,\n    fillColor: '#00b5ec',\n    initialValueScale: 0,\n    valueScaleSpringFriction: 5,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      valueScale: new Animated.Value(props.initialValueScale),\n    };\n  }\n\n  componentDidMount() {\n    this.animateValueScale();\n  }\n\n  componentWillUpdate(nextProps) {\n    const maxValueWillChange = nextProps.maxValue !== this.props.maxValue;\n    const valueWillChange = nextProps.value !== this.props.value;\n    const shouldAnimate = maxValueWillChange || valueWillChange;\n\n    // Only animate value scale if relative value changes\n    if (shouldAnimate) {\n      this.animateValueScale();\n    }\n  }\n\n  getStyles() {\n    const {\n      fillColor,\n      horizontal,\n      maxValue,\n      value,\n    } = this.props;\n\n    return styles({\n      fillColor,\n      horizontal,\n      maxValue,\n      value,\n      valueScale: this.state.valueScale,\n    });\n  }\n\n  animateValueScale() {\n    const {\n      destinationValueScale,\n      initialValueScale,\n      valueScaleSpringFriction,\n    } = this.props;\n\n    // Reset value scale\n    this.state.valueScale.setValue(initialValueScale);\n\n    // Apply spring animation to value scale to its destination value\n    Animated.spring(this.state.valueScale, {\n      friction: valueScaleSpringFriction,\n      toValue: destinationValueScale,\n    }).start();\n  }\n\n  render() {\n    const {\n      style,\n    } = this.props;\n\n    return (\n      <View style={[this.getStyles().container, style]}>\n        <Animated.View style={this.getStyles().maximum} />\n        <Animated.View style={this.getStyles().value} />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}