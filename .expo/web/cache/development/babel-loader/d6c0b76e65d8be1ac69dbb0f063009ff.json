{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\node_modules\\\\react-native-camera\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, PropTypes } from 'react';\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nvar CameraManager = NativeModules.CameraManager || NativeModules.CameraModule;\nvar CAMERA_REF = 'camera';\n\nfunction convertNativeProps(props) {\n  var newProps = _objectSpread({}, props);\n\n  if (typeof props.aspect === 'string') {\n    newProps.aspect = Camera.constants.Aspect[props.aspect];\n  }\n\n  if (typeof props.flashMode === 'string') {\n    newProps.flashMode = Camera.constants.FlashMode[props.flashMode];\n  }\n\n  if (typeof props.orientation === 'string') {\n    newProps.orientation = Camera.constants.Orientation[props.orientation];\n  }\n\n  if (typeof props.torchMode === 'string') {\n    newProps.torchMode = Camera.constants.TorchMode[props.torchMode];\n  }\n\n  if (typeof props.type === 'string') {\n    newProps.type = Camera.constants.Type[props.type];\n  }\n\n  if (typeof props.captureQuality === 'string') {\n    newProps.captureQuality = Camera.constants.CaptureQuality[props.captureQuality];\n  }\n\n  if (typeof props.captureMode === 'string') {\n    newProps.captureMode = Camera.constants.CaptureMode[props.captureMode];\n  }\n\n  if (typeof props.captureTarget === 'string') {\n    newProps.captureTarget = Camera.constants.CaptureTarget[props.captureTarget];\n  }\n\n  if (typeof props.onBarCodeRead !== 'function') {\n    newProps.barCodeTypes = [];\n  }\n\n  newProps.barcodeScannerEnabled = typeof props.onBarCodeRead === 'function';\n  return newProps;\n}\n\nvar Camera = function (_Component) {\n  _inherits(Camera, _Component);\n\n  var _super = _createSuper(Camera);\n\n  _createClass(Camera, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.refs[CAMERA_REF].setNativeProps(props);\n    }\n  }]);\n\n  function Camera() {\n    var _this;\n\n    _classCallCheck(this, Camera);\n\n    _this = _super.call(this);\n\n    _this._onBarCodeRead = function (data) {\n      if (_this.props.onBarCodeRead) {\n        _this.props.onBarCodeRead(data);\n      }\n    };\n\n    _this.state = {\n      isAuthorized: false,\n      isRecording: false\n    };\n    return _this;\n  }\n\n  _createClass(Camera, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _convertNativeProps, captureMode, hasVideoAndAudio, check, isAuthorized;\n\n      return _regeneratorRuntime.async(function componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this._addOnBarCodeReadListener();\n\n              _convertNativeProps = convertNativeProps({\n                captureMode: this.props.captureMode\n              }), captureMode = _convertNativeProps.captureMode;\n              hasVideoAndAudio = this.props.captureAudio && captureMode === Camera.constants.CaptureMode.video;\n              check = hasVideoAndAudio ? Camera.checkDeviceAuthorizationStatus : Camera.checkVideoAuthorizationStatus;\n\n              if (!check) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(check());\n\n            case 7:\n              isAuthorized = _context.sent;\n              this.setState({\n                isAuthorized: isAuthorized\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeOnBarCodeReadListener();\n\n      if (this.state.isRecording) {\n        this.stopCapture();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var onBarCodeRead = this.props.onBarCodeRead;\n\n      if (onBarCodeRead && !newProps.onBarCodeRead) {\n        this._addOnBarCodeReadListener(newProps);\n      }\n    }\n  }, {\n    key: \"_addOnBarCodeReadListener\",\n    value: function _addOnBarCodeReadListener(props) {\n      var _ref = props || this.props,\n          onBarCodeRead = _ref.onBarCodeRead;\n\n      this._removeOnBarCodeReadListener();\n\n      if (onBarCodeRead) {\n        this.cameraBarCodeReadListener = Platform.select({\n          ios: NativeAppEventEmitter.addListener('CameraBarCodeRead', this._onBarCodeRead),\n          android: DeviceEventEmitter.addListener('CameraBarCodeReadAndroid', this._onBarCodeRead)\n        });\n      }\n    }\n  }, {\n    key: \"_removeOnBarCodeReadListener\",\n    value: function _removeOnBarCodeReadListener() {\n      var listener = this.cameraBarCodeReadListener;\n\n      if (listener) {\n        listener.remove();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = [styles.base, this.props.style];\n      var nativeProps = convertNativeProps(this.props);\n      return React.createElement(RCTCamera, _extends({\n        ref: CAMERA_REF\n      }, nativeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"capture\",\n    value: function capture(options) {\n      var props = convertNativeProps(this.props);\n      options = _objectSpread({\n        audio: props.captureAudio,\n        barCodeTypes: props.barCodeTypes,\n        mode: props.captureMode,\n        playSoundOnCapture: props.playSoundOnCapture,\n        target: props.captureTarget,\n        quality: props.captureQuality,\n        type: props.type,\n        title: '',\n        description: '',\n        mirrorImage: props.mirrorImage\n      }, options);\n\n      if (options.mode === Camera.constants.CaptureMode.video) {\n        options.totalSeconds = options.totalSeconds > -1 ? options.totalSeconds : -1;\n        options.preferredTimeScale = options.preferredTimeScale || 30;\n        this.setState({\n          isRecording: true\n        });\n      }\n\n      return CameraManager.capture(options);\n    }\n  }, {\n    key: \"stopCapture\",\n    value: function stopCapture() {\n      if (this.state.isRecording) {\n        this.setState({\n          isRecording: false\n        });\n        return CameraManager.stopCapture();\n      }\n\n      return Promise.resolve(\"Not Recording.\");\n    }\n  }, {\n    key: \"getFOV\",\n    value: function getFOV() {\n      return CameraManager.getFOV();\n    }\n  }, {\n    key: \"hasFlash\",\n    value: function hasFlash() {\n      if (Platform.OS === 'android') {\n        var props = convertNativeProps(this.props);\n        return CameraManager.hasFlash({\n          type: props.type\n        });\n      }\n\n      return CameraManager.hasFlash();\n    }\n  }]);\n\n  return Camera;\n}(Component);\n\nCamera.constants = {\n  Aspect: CameraManager.Aspect,\n  BarCodeType: CameraManager.BarCodeType,\n  Type: CameraManager.Type,\n  CaptureMode: CameraManager.CaptureMode,\n  CaptureTarget: CameraManager.CaptureTarget,\n  CaptureQuality: CameraManager.CaptureQuality,\n  Orientation: CameraManager.Orientation,\n  FlashMode: CameraManager.FlashMode,\n  TorchMode: CameraManager.TorchMode\n};\nCamera.propTypes = _objectSpread(_objectSpread({}, View.propTypes), {}, {\n  aspect: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  captureAudio: PropTypes.bool,\n  captureMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  captureQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  captureTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  defaultOnFocusComponent: PropTypes.bool,\n  flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  keepAwake: PropTypes.bool,\n  onBarCodeRead: PropTypes.func,\n  barcodeScannerEnabled: PropTypes.bool,\n  onFocusChanged: PropTypes.func,\n  onZoomChanged: PropTypes.func,\n  mirrorImage: PropTypes.bool,\n  barCodeTypes: PropTypes.array,\n  orientation: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  playSoundOnCapture: PropTypes.bool,\n  torchMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\nCamera.defaultProps = {\n  aspect: CameraManager.Aspect.fill,\n  type: CameraManager.Type.back,\n  orientation: CameraManager.Orientation.auto,\n  captureAudio: false,\n  captureMode: CameraManager.CaptureMode.still,\n  captureTarget: CameraManager.CaptureTarget.cameraRoll,\n  captureQuality: CameraManager.CaptureQuality.high,\n  defaultOnFocusComponent: true,\n  flashMode: CameraManager.FlashMode.off,\n  playSoundOnCapture: true,\n  torchMode: CameraManager.TorchMode.off,\n  mirrorImage: false,\n  barCodeTypes: Object.values(CameraManager.BarCodeType)\n};\nCamera.checkDeviceAuthorizationStatus = CameraManager.checkDeviceAuthorizationStatus;\nCamera.checkVideoAuthorizationStatus = CameraManager.checkVideoAuthorizationStatus;\nCamera.checkAudioAuthorizationStatus = CameraManager.checkAudioAuthorizationStatus;\nexport { Camera as default };\nexport var constants = Camera.constants;\nvar RCTCamera = requireNativeComponent('RCTCamera', Camera);\nvar styles = StyleSheet.create({\n  base: {}\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-camera/index.js"],"names":["React","Component","PropTypes","NativeAppEventEmitter","requireNativeComponent","CameraManager","NativeModules","CameraModule","CAMERA_REF","convertNativeProps","props","newProps","aspect","Camera","constants","Aspect","flashMode","FlashMode","orientation","Orientation","torchMode","TorchMode","type","Type","captureQuality","CaptureQuality","captureMode","CaptureMode","captureTarget","CaptureTarget","onBarCodeRead","barCodeTypes","barcodeScannerEnabled","refs","setNativeProps","_onBarCodeRead","data","state","isAuthorized","isRecording","_addOnBarCodeReadListener","hasVideoAndAudio","captureAudio","video","check","checkDeviceAuthorizationStatus","checkVideoAuthorizationStatus","setState","_removeOnBarCodeReadListener","stopCapture","cameraBarCodeReadListener","Platform","select","ios","addListener","android","DeviceEventEmitter","listener","remove","style","styles","base","nativeProps","options","audio","mode","playSoundOnCapture","target","quality","title","description","mirrorImage","totalSeconds","preferredTimeScale","capture","Promise","resolve","getFOV","OS","hasFlash","BarCodeType","propTypes","View","oneOfType","string","number","bool","defaultOnFocusComponent","keepAwake","func","onFocusChanged","onZoomChanged","array","defaultProps","fill","back","auto","still","cameraRoll","high","off","Object","values","checkAudioAuthorizationStatus","RCTCamera","StyleSheet","create"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;SAGEC,qB;;;;SAIAC,sB;;AAIF,IAAMC,aAAa,GAAGC,aAAa,CAACD,aAAd,IAA+BC,aAAa,CAACC,YAAnE;AACA,IAAMC,UAAU,GAAG,QAAnB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAMC,QAAQ,qBAAQD,KAAR,CAAd;;AACA,MAAI,OAAOA,KAAK,CAACE,MAAb,KAAwB,QAA5B,EAAsC;AACpCD,IAAAA,QAAQ,CAACC,MAAT,GAAkBC,MAAM,CAACC,SAAP,CAAiBC,MAAjB,CAAwBL,KAAK,CAACE,MAA9B,CAAlB;AACD;;AAED,MAAI,OAAOF,KAAK,CAACM,SAAb,KAA2B,QAA/B,EAAyC;AACvCL,IAAAA,QAAQ,CAACK,SAAT,GAAqBH,MAAM,CAACC,SAAP,CAAiBG,SAAjB,CAA2BP,KAAK,CAACM,SAAjC,CAArB;AACD;;AAED,MAAI,OAAON,KAAK,CAACQ,WAAb,KAA6B,QAAjC,EAA2C;AACzCP,IAAAA,QAAQ,CAACO,WAAT,GAAuBL,MAAM,CAACC,SAAP,CAAiBK,WAAjB,CAA6BT,KAAK,CAACQ,WAAnC,CAAvB;AACD;;AAED,MAAI,OAAOR,KAAK,CAACU,SAAb,KAA2B,QAA/B,EAAyC;AACvCT,IAAAA,QAAQ,CAACS,SAAT,GAAqBP,MAAM,CAACC,SAAP,CAAiBO,SAAjB,CAA2BX,KAAK,CAACU,SAAjC,CAArB;AACD;;AAED,MAAI,OAAOV,KAAK,CAACY,IAAb,KAAsB,QAA1B,EAAoC;AAClCX,IAAAA,QAAQ,CAACW,IAAT,GAAgBT,MAAM,CAACC,SAAP,CAAiBS,IAAjB,CAAsBb,KAAK,CAACY,IAA5B,CAAhB;AACD;;AAED,MAAI,OAAOZ,KAAK,CAACc,cAAb,KAAgC,QAApC,EAA8C;AAC5Cb,IAAAA,QAAQ,CAACa,cAAT,GAA0BX,MAAM,CAACC,SAAP,CAAiBW,cAAjB,CAAgCf,KAAK,CAACc,cAAtC,CAA1B;AACD;;AAED,MAAI,OAAOd,KAAK,CAACgB,WAAb,KAA6B,QAAjC,EAA2C;AACzCf,IAAAA,QAAQ,CAACe,WAAT,GAAuBb,MAAM,CAACC,SAAP,CAAiBa,WAAjB,CAA6BjB,KAAK,CAACgB,WAAnC,CAAvB;AACD;;AAED,MAAI,OAAOhB,KAAK,CAACkB,aAAb,KAA+B,QAAnC,EAA6C;AAC3CjB,IAAAA,QAAQ,CAACiB,aAAT,GAAyBf,MAAM,CAACC,SAAP,CAAiBe,aAAjB,CAA+BnB,KAAK,CAACkB,aAArC,CAAzB;AACD;;AAGD,MAAI,OAAOlB,KAAK,CAACoB,aAAb,KAA+B,UAAnC,EAA+C;AAC7CnB,IAAAA,QAAQ,CAACoB,YAAT,GAAwB,EAAxB;AACD;;AAEDpB,EAAAA,QAAQ,CAACqB,qBAAT,GAAiC,OAAOtB,KAAK,CAACoB,aAAb,KAA+B,UAAhE;AAEA,SAAOnB,QAAP;AACD;;IAEoBE,M;;;;;;;mCAgFJH,K,EAAO;AACpB,WAAKuB,IAAL,CAAUzB,UAAV,EAAsB0B,cAAtB,CAAqCxB,KAArC;AACD;;;AAED,oBAAc;AAAA;;AAAA;;AACZ;;AADY,UA4DdyB,cA5Dc,GA4DG,UAACC,IAAD,EAAU;AACzB,UAAI,MAAK1B,KAAL,CAAWoB,aAAf,EAA8B;AAC5B,cAAKpB,KAAL,CAAWoB,aAAX,CAAyBM,IAAzB;AACD;AACF,KAhEa;;AAEZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFY;AAMb;;;;;;;;;;;AAGC,mBAAKC,yBAAL;;oCAEsB/B,kBAAkB,CAAC;AAAEiB,gBAAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWgB;AAA1B,eAAD,C,EAAlCA,W,uBAAAA,W;AACFe,cAAAA,gB,GAAmB,KAAK/B,KAAL,CAAWgC,YAAX,IAA2BhB,WAAW,KAAKb,MAAM,CAACC,SAAP,CAAiBa,WAAjB,CAA6BgB,K;AAC3FC,cAAAA,K,GAAQH,gBAAgB,GAAG5B,MAAM,CAACgC,8BAAV,GAA2ChC,MAAM,CAACiC,6B;;mBAE1EF,K;;;;;;+CACyBA,KAAK,E;;;AAA1BN,cAAAA,Y;AACN,mBAAKS,QAAL,CAAc;AAAET,gBAAAA,YAAY,EAAZA;AAAF,eAAd;;;;;;;;;;;2CAImB;AACrB,WAAKU,4BAAL;;AAEA,UAAI,KAAKX,KAAL,CAAWE,WAAf,EAA4B;AAC1B,aAAKU,WAAL;AACD;AACF;;;8CAEyBtC,Q,EAAU;AAAA,UAC1BmB,aAD0B,GACR,KAAKpB,KADG,CAC1BoB,aAD0B;;AAElC,UAAIA,aAAa,IAAI,CAACnB,QAAQ,CAACmB,aAA/B,EAA8C;AAC5C,aAAKU,yBAAL,CAA+B7B,QAA/B;AACD;AACF;;;8CAEyBD,K,EAAO;AAAA,iBACLA,KAAK,IAAI,KAAKA,KADT;AAAA,UACvBoB,aADuB,QACvBA,aADuB;;AAE/B,WAAKkB,4BAAL;;AACA,UAAIlB,aAAJ,EAAmB;AACjB,aAAKoB,yBAAL,GAAiCC,QAAQ,CAACC,MAAT,CAAgB;AAC/CC,UAAAA,GAAG,EAAElD,qBAAqB,CAACmD,WAAtB,CAAkC,mBAAlC,EAAuD,KAAKnB,cAA5D,CAD0C;AAE/CoB,UAAAA,OAAO,EAAEC,kBAAkB,CAACF,WAAnB,CAA+B,0BAA/B,EAA4D,KAAKnB,cAAjE;AAFsC,SAAhB,CAAjC;AAID;AACF;;;mDAC8B;AAC7B,UAAMsB,QAAQ,GAAG,KAAKP,yBAAtB;;AACA,UAAIO,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACC,MAAT;AACD;AACF;;;6BAEQ;AACP,UAAMC,KAAK,GAAG,CAACC,MAAM,CAACC,IAAR,EAAc,KAAKnD,KAAL,CAAWiD,KAAzB,CAAd;AACA,UAAMG,WAAW,GAAGrD,kBAAkB,CAAC,KAAKC,KAAN,CAAtC;AAEA,aAAO,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEF;AAAhB,SAAgCsD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;4BAQOC,O,EAAS;AACf,UAAMrD,KAAK,GAAGD,kBAAkB,CAAC,KAAKC,KAAN,CAAhC;AACAqD,MAAAA,OAAO;AACLC,QAAAA,KAAK,EAAEtD,KAAK,CAACgC,YADR;AAELX,QAAAA,YAAY,EAAErB,KAAK,CAACqB,YAFf;AAGLkC,QAAAA,IAAI,EAAEvD,KAAK,CAACgB,WAHP;AAILwC,QAAAA,kBAAkB,EAAExD,KAAK,CAACwD,kBAJrB;AAKLC,QAAAA,MAAM,EAAEzD,KAAK,CAACkB,aALT;AAMLwC,QAAAA,OAAO,EAAE1D,KAAK,CAACc,cANV;AAOLF,QAAAA,IAAI,EAAEZ,KAAK,CAACY,IAPP;AAQL+C,QAAAA,KAAK,EAAE,EARF;AASLC,QAAAA,WAAW,EAAE,EATR;AAULC,QAAAA,WAAW,EAAE7D,KAAK,CAAC6D;AAVd,SAWFR,OAXE,CAAP;;AAcA,UAAIA,OAAO,CAACE,IAAR,KAAiBpD,MAAM,CAACC,SAAP,CAAiBa,WAAjB,CAA6BgB,KAAlD,EAAyD;AACvDoB,QAAAA,OAAO,CAACS,YAAR,GAAwBT,OAAO,CAACS,YAAR,GAAuB,CAAC,CAAxB,GAA4BT,OAAO,CAACS,YAApC,GAAmD,CAAC,CAA5E;AACAT,QAAAA,OAAO,CAACU,kBAAR,GAA6BV,OAAO,CAACU,kBAAR,IAA8B,EAA3D;AACA,aAAK1B,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;;AAED,aAAOlC,aAAa,CAACqE,OAAd,CAAsBX,OAAtB,CAAP;AACD;;;kCAEa;AACZ,UAAI,KAAK1B,KAAL,CAAWE,WAAf,EAA4B;AAC1B,aAAKQ,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA,eAAOlC,aAAa,CAAC4C,WAAd,EAAP;AACD;;AACD,aAAO0B,OAAO,CAACC,OAAR,CAAgB,gBAAhB,CAAP;AACD;;;6BAEQ;AACP,aAAOvE,aAAa,CAACwE,MAAd,EAAP;AACD;;;+BAEU;AACT,UAAI1B,QAAQ,CAAC2B,EAAT,KAAgB,SAApB,EAA+B;AAC7B,YAAMpE,KAAK,GAAGD,kBAAkB,CAAC,KAAKC,KAAN,CAAhC;AACA,eAAOL,aAAa,CAAC0E,QAAd,CAAuB;AAC5BzD,UAAAA,IAAI,EAAEZ,KAAK,CAACY;AADgB,SAAvB,CAAP;AAGD;;AACD,aAAOjB,aAAa,CAAC0E,QAAd,EAAP;AACD;;;;EAnMiC9E,S;;AAAfY,M,CAEZC,S,GAAY;AACjBC,EAAAA,MAAM,EAAEV,aAAa,CAACU,MADL;AAEjBiE,EAAAA,WAAW,EAAE3E,aAAa,CAAC2E,WAFV;AAGjBzD,EAAAA,IAAI,EAAElB,aAAa,CAACkB,IAHH;AAIjBI,EAAAA,WAAW,EAAEtB,aAAa,CAACsB,WAJV;AAKjBE,EAAAA,aAAa,EAAExB,aAAa,CAACwB,aALZ;AAMjBJ,EAAAA,cAAc,EAAEpB,aAAa,CAACoB,cANb;AAOjBN,EAAAA,WAAW,EAAEd,aAAa,CAACc,WAPV;AAQjBF,EAAAA,SAAS,EAAEZ,aAAa,CAACY,SARR;AASjBI,EAAAA,SAAS,EAAEhB,aAAa,CAACgB;AATR,C;AAFAR,M,CAcZoE,S,mCACFC,IAAI,CAACD,S;AACRrE,EAAAA,MAAM,EAAEV,SAAS,CAACiF,SAAV,CAAoB,CAC1BjF,SAAS,CAACkF,MADgB,EAE1BlF,SAAS,CAACmF,MAFgB,CAApB,C;AAIR3C,EAAAA,YAAY,EAAExC,SAAS,CAACoF,I;AACxB5D,EAAAA,WAAW,EAAExB,SAAS,CAACiF,SAAV,CAAoB,CAC/BjF,SAAS,CAACkF,MADqB,EAE/BlF,SAAS,CAACmF,MAFqB,CAApB,C;AAIb7D,EAAAA,cAAc,EAAEtB,SAAS,CAACiF,SAAV,CAAoB,CAClCjF,SAAS,CAACkF,MADwB,EAElClF,SAAS,CAACmF,MAFwB,CAApB,C;AAIhBzD,EAAAA,aAAa,EAAE1B,SAAS,CAACiF,SAAV,CAAoB,CACjCjF,SAAS,CAACkF,MADuB,EAEjClF,SAAS,CAACmF,MAFuB,CAApB,C;AAIfE,EAAAA,uBAAuB,EAAErF,SAAS,CAACoF,I;AACnCtE,EAAAA,SAAS,EAAEd,SAAS,CAACiF,SAAV,CAAoB,CAC7BjF,SAAS,CAACkF,MADmB,EAE7BlF,SAAS,CAACmF,MAFmB,CAApB,C;AAIXG,EAAAA,SAAS,EAAEtF,SAAS,CAACoF,I;AACrBxD,EAAAA,aAAa,EAAE5B,SAAS,CAACuF,I;AACzBzD,EAAAA,qBAAqB,EAAE9B,SAAS,CAACoF,I;AACjCI,EAAAA,cAAc,EAAExF,SAAS,CAACuF,I;AAC1BE,EAAAA,aAAa,EAAEzF,SAAS,CAACuF,I;AACzBlB,EAAAA,WAAW,EAAErE,SAAS,CAACoF,I;AACvBvD,EAAAA,YAAY,EAAE7B,SAAS,CAAC0F,K;AACxB1E,EAAAA,WAAW,EAAEhB,SAAS,CAACiF,SAAV,CAAoB,CAC/BjF,SAAS,CAACkF,MADqB,EAE/BlF,SAAS,CAACmF,MAFqB,CAApB,C;AAIbnB,EAAAA,kBAAkB,EAAEhE,SAAS,CAACoF,I;AAC9BlE,EAAAA,SAAS,EAAElB,SAAS,CAACiF,SAAV,CAAoB,CAC7BjF,SAAS,CAACkF,MADmB,EAE7BlF,SAAS,CAACmF,MAFmB,CAApB,C;AAIX/D,EAAAA,IAAI,EAAEpB,SAAS,CAACiF,SAAV,CAAoB,CACxBjF,SAAS,CAACkF,MADc,EAExBlF,SAAS,CAACmF,MAFc,CAApB;;AAtDWxE,M,CA4DZgF,Y,GAAe;AACpBjF,EAAAA,MAAM,EAAEP,aAAa,CAACU,MAAd,CAAqB+E,IADT;AAEpBxE,EAAAA,IAAI,EAAEjB,aAAa,CAACkB,IAAd,CAAmBwE,IAFL;AAGpB7E,EAAAA,WAAW,EAAEb,aAAa,CAACc,WAAd,CAA0B6E,IAHnB;AAIpBtD,EAAAA,YAAY,EAAE,KAJM;AAKpBhB,EAAAA,WAAW,EAAErB,aAAa,CAACsB,WAAd,CAA0BsE,KALnB;AAMpBrE,EAAAA,aAAa,EAAEvB,aAAa,CAACwB,aAAd,CAA4BqE,UANvB;AAOpB1E,EAAAA,cAAc,EAAEnB,aAAa,CAACoB,cAAd,CAA6B0E,IAPzB;AAQpBZ,EAAAA,uBAAuB,EAAE,IARL;AASpBvE,EAAAA,SAAS,EAAEX,aAAa,CAACY,SAAd,CAAwBmF,GATf;AAUpBlC,EAAAA,kBAAkB,EAAE,IAVA;AAWpB9C,EAAAA,SAAS,EAAEf,aAAa,CAACgB,SAAd,CAAwB+E,GAXf;AAYpB7B,EAAAA,WAAW,EAAE,KAZO;AAapBxC,EAAAA,YAAY,EAAEsE,MAAM,CAACC,MAAP,CAAcjG,aAAa,CAAC2E,WAA5B;AAbM,C;AA5DHnE,M,CA4EZgC,8B,GAAiCxC,aAAa,CAACwC,8B;AA5EnChC,M,CA6EZiC,6B,GAAgCzC,aAAa,CAACyC,6B;AA7ElCjC,M,CA8EZ0F,6B,GAAgClG,aAAa,CAACkG,6B;SA9ElC1F,M;AAsMrB,OAAO,IAAMC,SAAS,GAAGD,MAAM,CAACC,SAAzB;AAEP,IAAM0F,SAAS,GAAGpG,sBAAsB,CAAC,WAAD,EAAcS,MAAd,CAAxC;AAEA,IAAM+C,MAAM,GAAG6C,UAAU,CAACC,MAAX,CAAkB;AAC/B7C,EAAAA,IAAI,EAAE;AADyB,CAAlB,CAAf","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport {\n  DeviceEventEmitter, // android\n  NativeAppEventEmitter, // ios\n  NativeModules,\n  Platform,\n  StyleSheet,\n  requireNativeComponent,\n  View,\n} from 'react-native';\n\nconst CameraManager = NativeModules.CameraManager || NativeModules.CameraModule;\nconst CAMERA_REF = 'camera';\n\nfunction convertNativeProps(props) {\n  const newProps = { ...props };\n  if (typeof props.aspect === 'string') {\n    newProps.aspect = Camera.constants.Aspect[props.aspect];\n  }\n\n  if (typeof props.flashMode === 'string') {\n    newProps.flashMode = Camera.constants.FlashMode[props.flashMode];\n  }\n\n  if (typeof props.orientation === 'string') {\n    newProps.orientation = Camera.constants.Orientation[props.orientation];\n  }\n\n  if (typeof props.torchMode === 'string') {\n    newProps.torchMode = Camera.constants.TorchMode[props.torchMode];\n  }\n\n  if (typeof props.type === 'string') {\n    newProps.type = Camera.constants.Type[props.type];\n  }\n\n  if (typeof props.captureQuality === 'string') {\n    newProps.captureQuality = Camera.constants.CaptureQuality[props.captureQuality];\n  }\n\n  if (typeof props.captureMode === 'string') {\n    newProps.captureMode = Camera.constants.CaptureMode[props.captureMode];\n  }\n  \n  if (typeof props.captureTarget === 'string') {\n    newProps.captureTarget = Camera.constants.CaptureTarget[props.captureTarget];\n  }\n\n  // do not register barCodeTypes if no barcode listener\n  if (typeof props.onBarCodeRead !== 'function') {\n    newProps.barCodeTypes = [];\n  }\n\n  newProps.barcodeScannerEnabled = typeof props.onBarCodeRead === 'function'\n\n  return newProps;\n}\n\nexport default class Camera extends Component {\n\n  static constants = {\n    Aspect: CameraManager.Aspect,\n    BarCodeType: CameraManager.BarCodeType,\n    Type: CameraManager.Type,\n    CaptureMode: CameraManager.CaptureMode,\n    CaptureTarget: CameraManager.CaptureTarget,\n    CaptureQuality: CameraManager.CaptureQuality,\n    Orientation: CameraManager.Orientation,\n    FlashMode: CameraManager.FlashMode,\n    TorchMode: CameraManager.TorchMode\n  };\n\n  static propTypes = {\n    ...View.propTypes,\n    aspect: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    captureAudio: PropTypes.bool,\n    captureMode: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    captureQuality: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    captureTarget: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    defaultOnFocusComponent: PropTypes.bool,\n    flashMode: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    keepAwake: PropTypes.bool,\n    onBarCodeRead: PropTypes.func,\n    barcodeScannerEnabled: PropTypes.bool,\n    onFocusChanged: PropTypes.func,\n    onZoomChanged: PropTypes.func,\n    mirrorImage: PropTypes.bool,\n    barCodeTypes: PropTypes.array,\n    orientation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    playSoundOnCapture: PropTypes.bool,\n    torchMode: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    type: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  };\n\n  static defaultProps = {\n    aspect: CameraManager.Aspect.fill,\n    type: CameraManager.Type.back,\n    orientation: CameraManager.Orientation.auto,\n    captureAudio: false,\n    captureMode: CameraManager.CaptureMode.still,\n    captureTarget: CameraManager.CaptureTarget.cameraRoll,\n    captureQuality: CameraManager.CaptureQuality.high,\n    defaultOnFocusComponent: true,\n    flashMode: CameraManager.FlashMode.off,\n    playSoundOnCapture: true,\n    torchMode: CameraManager.TorchMode.off,\n    mirrorImage: false,\n    barCodeTypes: Object.values(CameraManager.BarCodeType),\n  };\n\n  static checkDeviceAuthorizationStatus = CameraManager.checkDeviceAuthorizationStatus;\n  static checkVideoAuthorizationStatus = CameraManager.checkVideoAuthorizationStatus;\n  static checkAudioAuthorizationStatus = CameraManager.checkAudioAuthorizationStatus;\n\n  setNativeProps(props) {\n    this.refs[CAMERA_REF].setNativeProps(props);\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      isAuthorized: false,\n      isRecording: false\n    };\n  }\n\n  async componentWillMount() {\n    this._addOnBarCodeReadListener()\n\n    let { captureMode } = convertNativeProps({ captureMode: this.props.captureMode })\n    let hasVideoAndAudio = this.props.captureAudio && captureMode === Camera.constants.CaptureMode.video\n    let check = hasVideoAndAudio ? Camera.checkDeviceAuthorizationStatus : Camera.checkVideoAuthorizationStatus;\n\n    if (check) {\n      const isAuthorized = await check();\n      this.setState({ isAuthorized });\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeOnBarCodeReadListener()\n\n    if (this.state.isRecording) {\n      this.stopCapture();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { onBarCodeRead } = this.props\n    if (onBarCodeRead && !newProps.onBarCodeRead) {\n      this._addOnBarCodeReadListener(newProps)\n    }\n  }\n\n  _addOnBarCodeReadListener(props) {\n    const { onBarCodeRead } = props || this.props\n    this._removeOnBarCodeReadListener()\n    if (onBarCodeRead) {\n      this.cameraBarCodeReadListener = Platform.select({\n        ios: NativeAppEventEmitter.addListener('CameraBarCodeRead', this._onBarCodeRead),\n        android: DeviceEventEmitter.addListener('CameraBarCodeReadAndroid',  this._onBarCodeRead)\n      })\n    }\n  }\n  _removeOnBarCodeReadListener() {\n    const listener = this.cameraBarCodeReadListener\n    if (listener) {\n      listener.remove()\n    }\n  }\n\n  render() {\n    const style = [styles.base, this.props.style];\n    const nativeProps = convertNativeProps(this.props);\n\n    return <RCTCamera ref={CAMERA_REF} {...nativeProps} />;\n  }\n\n  _onBarCodeRead = (data) => {\n    if (this.props.onBarCodeRead) {\n      this.props.onBarCodeRead(data)\n    }\n  };\n\n  capture(options) {\n    const props = convertNativeProps(this.props);\n    options = {\n      audio: props.captureAudio,\n      barCodeTypes: props.barCodeTypes,\n      mode: props.captureMode,\n      playSoundOnCapture: props.playSoundOnCapture,\n      target: props.captureTarget,\n      quality: props.captureQuality,\n      type: props.type,\n      title: '',\n      description: '',\n      mirrorImage: props.mirrorImage,\n      ...options\n    };\n\n    if (options.mode === Camera.constants.CaptureMode.video) {\n      options.totalSeconds = (options.totalSeconds > -1 ? options.totalSeconds : -1);\n      options.preferredTimeScale = options.preferredTimeScale || 30;\n      this.setState({ isRecording: true });\n    }\n\n    return CameraManager.capture(options);\n  }\n\n  stopCapture() {\n    if (this.state.isRecording) {\n      this.setState({ isRecording: false });\n      return CameraManager.stopCapture();\n    }\n    return Promise.resolve(\"Not Recording.\");\n  }\n\n  getFOV() {\n    return CameraManager.getFOV();\n  }\n\n  hasFlash() {\n    if (Platform.OS === 'android') {\n      const props = convertNativeProps(this.props);\n      return CameraManager.hasFlash({\n        type: props.type\n      });\n    }\n    return CameraManager.hasFlash();\n  }\n}\n\nexport const constants = Camera.constants;\n\nconst RCTCamera = requireNativeComponent('RCTCamera', Camera);\n\nconst styles = StyleSheet.create({\n  base: {},\n});\n"]},"metadata":{},"sourceType":"module"}