{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\CameraScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Camera from 'react-native-camera';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport QRCodeScanner from 'react-native-qrcode-scanner';\nimport { RNCamera } from 'react-native-camera';\n\nvar ScanScreen = function (_Component) {\n  _inherits(ScanScreen, _Component);\n\n  var _super = _createSuper(ScanScreen);\n\n  function ScanScreen() {\n    var _this;\n\n    _classCallCheck(this, ScanScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onSuccess = function (e) {\n      Linking.openURL(e.data).catch(function (err) {\n        return console.error('An error occured', err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScanScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(QRCodeScanner, {\n        onRead: this.onSuccess,\n        flashMode: RNCamera.Constants.FlashMode.torch,\n        topContent: React.createElement(Text, {\n          style: styles.centerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, \"Go to\", ' ', React.createElement(Text, {\n          style: styles.textBold,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, \"wikipedia.org/wiki/QR_code\"), \" on your computer and scan the QR code.\"),\n        bottomContent: React.createElement(TouchableOpacity, {\n          style: styles.buttonTouchable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, \"OK. Got it!\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ScanScreen;\n}(Component);","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/CameraScreen.js"],"names":["React","Camera","Component","QRCodeScanner","RNCamera","ScanScreen","onSuccess","e","Linking","openURL","data","catch","err","console","error","Constants","FlashMode","torch","styles","centerText","textBold","buttonTouchable","buttonText"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,SAASC,SAAT,QAA0B,OAA1B;;;;;AASA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;IAEMC,U;;;;;;;;;;;;;;;;UACJC,S,GAAY,UAAAC,CAAC,EAAI;AACfC,MAAAA,OAAO,CAACC,OAAR,CAAgBF,CAAC,CAACG,IAAlB,EAAwBC,KAAxB,CAA8B,UAAAC,GAAG;AAAA,eAC/BC,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC,CAD+B;AAAA,OAAjC;AAGD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,aAAD;AACE,QAAA,MAAM,EAAE,KAAKN,SADf;AAEE,QAAA,SAAS,EAAEF,QAAQ,CAACW,SAAT,CAAmBC,SAAnB,CAA6BC,KAF1C;AAGE,QAAA,UAAU,EACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,GADR,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFF,4CAJJ;AAUE,QAAA,aAAa,EACX,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEF,MAAM,CAACG,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAkBD;;;;EA1BsBpB,S","sourcesContent":["import * as React from 'react';\r\nimport Camera from 'react-native-camera';\r\nimport {Button, View, Text} from 'react-native';\r\nimport { Component } from 'react';\r\n\r\nimport {\r\n  AppRegistry,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Linking\r\n} from 'react-native';\r\n\r\nimport QRCodeScanner from 'react-native-qrcode-scanner';\r\nimport { RNCamera } from 'react-native-camera';\r\n\r\nclass ScanScreen extends Component {\r\n  onSuccess = e => {\r\n    Linking.openURL(e.data).catch(err =>\r\n      console.error('An error occured', err)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <QRCodeScanner\r\n        onRead={this.onSuccess}\r\n        flashMode={RNCamera.Constants.FlashMode.torch}\r\n        topContent={\r\n          <Text style={styles.centerText}>\r\n            Go to{' '}\r\n            <Text style={styles.textBold}>wikipedia.org/wiki/QR_code</Text> on\r\n            your computer and scan the QR code.\r\n          </Text>\r\n        }\r\n        bottomContent={\r\n          <TouchableOpacity style={styles.buttonTouchable}>\r\n            <Text style={styles.buttonText}>OK. Got it!</Text>\r\n          </TouchableOpacity>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}