{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\ConnectedScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nfunction AutoJump(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    setTimeout(function () {\n      return navigation.navigate('Main_Function');\n    }, 1500);\n  });\n}\n\nvar ConnectedScreen = function (_React$Component) {\n  _inherits(ConnectedScreen, _React$Component);\n\n  var _super = _createSuper(ConnectedScreen);\n\n  function ConnectedScreen() {\n    _classCallCheck(this, ConnectedScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ConnectedScreen, [{\n    key: \"render\",\n    value: function render() {\n      this.AutoJump();\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#90FF33',\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        backgroundColor: \"#ecf0f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, \"You are connected\"));\n    }\n  }]);\n\n  return ConnectedScreen;\n}(React.Component);\n\nexport { ConnectedScreen as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/ConnectedScreen.js"],"names":["React","useEffect","AutoJump","navigation","setTimeout","navigate","ConnectedScreen","backgroundColor","flex","alignItems","justifyContent","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAAyB,OAAzB;;;;;AAGA,SAASC,QAAT,OAAkC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC9BF,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,UAAU,CAAC;AAAA,aAAMD,UAAU,CAACE,QAAX,CAAoB,eAApB,CAAN;AAAA,KAAD,EAA6C,IAA7C,CAAV;AACD,GAFQ,CAAT;AAGH;;IAEoBC,e;;;;;;;;;;;;;6BACT;AACJ,WAAKJ,QAAL;AACN,aACU,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,IAAI,EAAE,CAApC;AAAuCC,UAAAA,UAAU,EAAE,QAAnD;AAA6DC,UAAAA,cAAc,EAAE;AAA7E,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,cAApB;AAAmC,QAAA,eAAe,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CADV;AAMA;;;;EAT2CV,KAAK,CAACW,S;;SAA9BL,e","sourcesContent":["import * as React from 'react';\r\nimport { useEffect} from 'react';\r\nimport { View, Text, StatusBar} from 'react-native';\r\n\r\nfunction AutoJump({ navigation }) {\r\n    useEffect(() => {\r\n      setTimeout(() => navigation.navigate('Main_Function'), 1500);\r\n    });\r\n}\r\n\r\nexport default class ConnectedScreen extends React.Component {    \r\n    render(){\r\n        this.AutoJump()\r\n\t\treturn(\r\n            <View style={{ backgroundColor: '#90FF33', flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                <StatusBar barStyle=\"dark-content\" backgroundColor=\"#ecf0f1\" />\r\n                <Text>You are connected</Text>\r\n            </View>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}