{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getNativeModule } from \"../../utils/native\";\n\nvar HttpMetric = function () {\n  function HttpMetric(perf, url, httpMethod) {\n    _classCallCheck(this, HttpMetric);\n\n    this._perf = perf;\n    this.url = url;\n    this.httpMethod = httpMethod;\n  }\n\n  _createClass(HttpMetric, [{\n    key: \"getAttribute\",\n    value: function getAttribute(attribute) {\n      return getNativeModule(this._perf).getHttpMetricAttribute(this.url, this.httpMethod, attribute);\n    }\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return getNativeModule(this._perf).getHttpMetricAttributes(this.url, this.httpMethod);\n    }\n  }, {\n    key: \"putAttribute\",\n    value: function putAttribute(attribute, value) {\n      return getNativeModule(this._perf).putHttpMetricAttribute(this.url, this.httpMethod, attribute, value);\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(attribute) {\n      return getNativeModule(this._perf).removeHttpMetricAttribute(this.url, this.httpMethod, attribute);\n    }\n  }, {\n    key: \"setHttpResponseCode\",\n    value: function setHttpResponseCode(code) {\n      return getNativeModule(this._perf).setHttpMetricResponseCode(this.url, this.httpMethod, code);\n    }\n  }, {\n    key: \"setRequestPayloadSize\",\n    value: function setRequestPayloadSize(bytes) {\n      return getNativeModule(this._perf).setHttpMetricRequestPayloadSize(this.url, this.httpMethod, bytes);\n    }\n  }, {\n    key: \"setResponseContentType\",\n    value: function setResponseContentType(type) {\n      return getNativeModule(this._perf).setHttpMetricResponseContentType(this.url, this.httpMethod, type);\n    }\n  }, {\n    key: \"setResponsePayloadSize\",\n    value: function setResponsePayloadSize(bytes) {\n      return getNativeModule(this._perf).setHttpMetricResponsePayloadSize(this.url, this.httpMethod, bytes);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return getNativeModule(this._perf).startHttpMetric(this.url, this.httpMethod);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      return getNativeModule(this._perf).stopHttpMetric(this.url, this.httpMethod);\n    }\n  }]);\n\n  return HttpMetric;\n}();\n\nexport { HttpMetric as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/modules/perf/HttpMetric.js"],"names":["getNativeModule","HttpMetric","perf","url","httpMethod","_perf","attribute","getHttpMetricAttribute","getHttpMetricAttributes","value","putHttpMetricAttribute","removeHttpMetricAttribute","code","setHttpMetricResponseCode","bytes","setHttpMetricRequestPayloadSize","type","setHttpMetricResponseContentType","setHttpMetricResponsePayloadSize","startHttpMetric","stopHttpMetric"],"mappings":";;AAIA,SAASA,eAAT;;IACqBC,U;AACnB,sBAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,UAAvB,EAAmC;AAAA;;AACjC,SAAKC,KAAL,GAAaH,IAAb;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;;;iCAEYE,S,EAAW;AACtB,aAAON,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BE,sBAA5B,CAAmD,KAAKJ,GAAxD,EAA6D,KAAKC,UAAlE,EAA8EE,SAA9E,CAAP;AACD;;;oCAEe;AACd,aAAON,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BG,uBAA5B,CAAoD,KAAKL,GAAzD,EAA8D,KAAKC,UAAnE,CAAP;AACD;;;iCAEYE,S,EAAWG,K,EAAO;AAC7B,aAAOT,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BK,sBAA5B,CAAmD,KAAKP,GAAxD,EAA6D,KAAKC,UAAlE,EAA8EE,SAA9E,EAAyFG,KAAzF,CAAP;AACD;;;oCAEeH,S,EAAW;AACzB,aAAON,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BM,yBAA5B,CAAsD,KAAKR,GAA3D,EAAgE,KAAKC,UAArE,EAAiFE,SAAjF,CAAP;AACD;;;wCAEmBM,I,EAAM;AACxB,aAAOZ,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BQ,yBAA5B,CAAsD,KAAKV,GAA3D,EAAgE,KAAKC,UAArE,EAAiFQ,IAAjF,CAAP;AACD;;;0CAEqBE,K,EAAO;AAC3B,aAAOd,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BU,+BAA5B,CAA4D,KAAKZ,GAAjE,EAAsE,KAAKC,UAA3E,EAAuFU,KAAvF,CAAP;AACD;;;2CAEsBE,I,EAAM;AAC3B,aAAOhB,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BY,gCAA5B,CAA6D,KAAKd,GAAlE,EAAuE,KAAKC,UAA5E,EAAwFY,IAAxF,CAAP;AACD;;;2CAEsBF,K,EAAO;AAC5B,aAAOd,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4Ba,gCAA5B,CAA6D,KAAKf,GAAlE,EAAuE,KAAKC,UAA5E,EAAwFU,KAAxF,CAAP;AACD;;;4BAEO;AACN,aAAOd,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4Bc,eAA5B,CAA4C,KAAKhB,GAAjD,EAAsD,KAAKC,UAA3D,CAAP;AACD;;;2BAEM;AACL,aAAOJ,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4Be,cAA5B,CAA2C,KAAKjB,GAAhD,EAAqD,KAAKC,UAA1D,CAAP;AACD;;;;;;SA7CkBH,U","sourcesContent":["/**\n * \n * Trace representation wrapper\n */\nimport { getNativeModule } from '../../utils/native';\nexport default class HttpMetric {\n  constructor(perf, url, httpMethod) {\n    this._perf = perf;\n    this.url = url;\n    this.httpMethod = httpMethod;\n  }\n\n  getAttribute(attribute) {\n    return getNativeModule(this._perf).getHttpMetricAttribute(this.url, this.httpMethod, attribute);\n  }\n\n  getAttributes() {\n    return getNativeModule(this._perf).getHttpMetricAttributes(this.url, this.httpMethod);\n  }\n\n  putAttribute(attribute, value) {\n    return getNativeModule(this._perf).putHttpMetricAttribute(this.url, this.httpMethod, attribute, value);\n  }\n\n  removeAttribute(attribute) {\n    return getNativeModule(this._perf).removeHttpMetricAttribute(this.url, this.httpMethod, attribute);\n  }\n\n  setHttpResponseCode(code) {\n    return getNativeModule(this._perf).setHttpMetricResponseCode(this.url, this.httpMethod, code);\n  }\n\n  setRequestPayloadSize(bytes) {\n    return getNativeModule(this._perf).setHttpMetricRequestPayloadSize(this.url, this.httpMethod, bytes);\n  }\n\n  setResponseContentType(type) {\n    return getNativeModule(this._perf).setHttpMetricResponseContentType(this.url, this.httpMethod, type);\n  }\n\n  setResponsePayloadSize(bytes) {\n    return getNativeModule(this._perf).setHttpMetricResponsePayloadSize(this.url, this.httpMethod, bytes);\n  }\n\n  start() {\n    return getNativeModule(this._perf).startHttpMetric(this.url, this.httpMethod);\n  }\n\n  stop() {\n    return getNativeModule(this._perf).stopHttpMetric(this.url, this.httpMethod);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}