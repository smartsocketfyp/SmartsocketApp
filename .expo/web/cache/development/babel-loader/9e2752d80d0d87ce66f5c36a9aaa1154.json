{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { isAndroid, isIOS } from \"../../utils\";\n\nvar AuthSettings = function () {\n  function AuthSettings(auth) {\n    _classCallCheck(this, AuthSettings);\n\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n\n  _createClass(AuthSettings, [{\n    key: \"setAutoRetrievedSmsCodeForPhoneNumber\",\n    value: function setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n      if (isAndroid) {\n        return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n      }\n\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"appVerificationDisabledForTesting\",\n    get: function get() {\n      return this._appVerificationDisabledForTesting;\n    },\n    set: function set(disabled) {\n      if (isIOS) {\n        this._appVerificationDisabledForTesting = disabled;\n        getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n      }\n    }\n  }]);\n\n  return AuthSettings;\n}();\n\nexport { AuthSettings as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/modules/auth/AuthSettings.js"],"names":["getNativeModule","isAndroid","isIOS","AuthSettings","auth","_auth","_appVerificationDisabledForTesting","phoneNumber","smsCode","setAutoRetrievedSmsCodeForPhoneNumber","Promise","resolve","disabled","setAppVerificationDisabledForTesting"],"mappings":";;AAAA,SAASA,eAAT;AACA,SAASC,SAAT,EAAoBC,KAApB;;IAMqBC,Y;AACnB,wBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,kCAAL,GAA0C,KAA1C;AACD;;;;0DAwCqCC,W,EAAaC,O,EAAS;AAC1D,UAAIP,SAAJ,EAAe;AACb,eAAOD,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BI,qCAA5B,CAAkEF,WAAlE,EAA+EC,OAA/E,CAAP;AACD;;AAED,aAAOE,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;;wBArCuC;AACtC,aAAO,KAAKL,kCAAZ;AACD,K;sBASqCM,Q,EAAU;AAC9C,UAAIV,KAAJ,EAAW;AACT,aAAKI,kCAAL,GAA0CM,QAA1C;AACAZ,QAAAA,eAAe,CAAC,KAAKK,KAAN,CAAf,CAA4BQ,oCAA5B,CAAiED,QAAjE;AACD;AACF;;;;;;SA7BkBT,Y","sourcesContent":["import { getNativeModule } from '../../utils/native';\nimport { isAndroid, isIOS } from '../../utils';\n\n/**\n * Interface representing an Auth instance's settings, currently used\n * for enabling/disabling app verification for phone Auth testing. *\n */\nexport default class AuthSettings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return Promise.resolve(null);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}