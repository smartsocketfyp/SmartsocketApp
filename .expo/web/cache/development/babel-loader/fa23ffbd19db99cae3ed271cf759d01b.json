{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\SchedulingCountdownTimerScreen.js\";\nimport * as React from 'react';\nimport CountDown from 'react-native-countdown-component';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nfunction SchedulingCountdownTimerScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  console.warn(route);\n  var Text_Minutes = route.params;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \" Time before socket switch on/off\"), React.createElement(CountDown, {\n    size: 30,\n    until: Text_Minutes * 60,\n    onFinish: function onFinish() {\n      return alert('Finished') > navigation.navigate('TimesUp');\n    },\n    digitStyle: {\n      backgroundColor: '#FFF',\n      borderWidth: 2,\n      borderColor: '#1CC625'\n    },\n    digitTxtStyle: {\n      color: '#1CC625'\n    },\n    timeLabelStyle: {\n      color: 'red',\n      fontWeight: 'bold'\n    },\n    separatorStyle: {\n      color: '#1CC625'\n    },\n    timeToShow: ['H', 'M', 'S'],\n    timeLabels: {\n      h: 'Hour',\n      m: 'Minutes',\n      s: 'Seconds'\n    },\n    showSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.Stop_Button,\n    onPress: function onPress() {\n      return navigation.navigate('TimesUp');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Button_Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \" Stop Now \")));\n}\n\nvar styles = StyleSheet.create({\n  Instructions: {\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 50,\n    marginBottom: 25,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  Stop_Button: {\n    backgroundColor: '#800000',\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    marginTop: 25,\n    marginBottom: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button_Text: {\n    color: \"#FFF\",\n    fontWeight: \"600\"\n  }\n});\nexport default SchedulingCountdownTimerScreen;","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/SchedulingCountdownTimerScreen.js"],"names":["React","CountDown","SchedulingCountdownTimerScreen","route","navigation","console","warn","Text_Minutes","params","styles","container","Instructions","alert","navigate","backgroundColor","borderWidth","borderColor","color","fontWeight","h","m","s","Stop_Button","Button_Text","StyleSheet","create","marginLeft","marginRight","marginTop","marginBottom","fontSize","flex","alignItems","justifyContent","borderRadius","height","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport CountDown from 'react-native-countdown-component';\r\nimport { View, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\n\r\nfunction SchedulingCountdownTimerScreen({ route, navigation }) {\r\n    console.warn(route)\r\n    let Text_Minutes = route.params;\r\n  \r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style = {styles.Instructions}> Time before socket switch on/off</Text>\r\n      \r\n        <CountDown \r\n          size={30}\r\n          until={Text_Minutes*60}\r\n          onFinish={() => alert('Finished') > navigation.navigate('TimesUp')}\r\n          digitStyle={{backgroundColor: '#FFF', borderWidth: 2, borderColor: '#1CC625'}}\r\n          digitTxtStyle={{color: '#1CC625'}}\r\n          timeLabelStyle={{color: 'red', fontWeight: 'bold'}}\r\n          separatorStyle={{color: '#1CC625'}}\r\n          timeToShow={['H', 'M', 'S']}\r\n          timeLabels={{h: 'Hour', m: 'Minutes', s: 'Seconds'}}\r\n          showSeparator\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={styles.Stop_Button}\r\n          onPress={() => navigation.navigate('TimesUp')}\r\n        >\r\n          <Text style = {styles.Button_Text}> Stop Now </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    Instructions: {\r\n      marginLeft: 25,\r\n      marginRight: 25,\r\n      marginTop: 50,\r\n      marginBottom: 25,\r\n      color: \"#000\", \r\n      fontWeight: \"bold\", \r\n      fontSize: 25\r\n    },\r\n\r\n    container: {\r\n        flex : 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    Stop_Button: {\r\n        backgroundColor : '#800000',\r\n        borderRadius : 4,\r\n        height: 52,\r\n        width : 300,\r\n        marginTop: 25,\r\n        marginBottom: 250,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    Button_Text: {\r\n        color: \"#FFF\",\r\n        fontWeight: \"600\"\r\n    }\r\n});\r\n\r\nexport default SchedulingCountdownTimerScreen;"]},"metadata":{},"sourceType":"module"}