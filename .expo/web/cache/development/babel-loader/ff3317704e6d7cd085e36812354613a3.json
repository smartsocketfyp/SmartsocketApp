{"ast":null,"code":"var CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport default {\n  btoa: function btoa() {\n    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var map;\n    var i = 0;\n    var block = 0;\n    var output = '';\n\n    for (block = 0, i = 0, map = CHARS; input.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n      var charCode = input.charCodeAt(i += 3 / 4);\n\n      if (charCode > 0xff) {\n        throw new Error(\"'RNFirebase.utils.btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  },\n  atob: function atob() {\n    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var i = 0;\n    var bc = 0;\n    var bs = 0;\n    var buffer;\n    var output = '';\n    var str = input.replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'RNFirebase.utils.atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (bc = 0, bs = 0, i = 0; buffer = str.charAt(i++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      buffer = CHARS.indexOf(buffer);\n    }\n\n    return output;\n  }\n};","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/node_modules/react-native-firebase/dist/utils/Base64.js"],"names":["CHARS","btoa","input","map","i","block","output","charAt","charCode","charCodeAt","Error","atob","bc","bs","buffer","str","replace","length","String","fromCharCode","indexOf"],"mappings":"AACA,IAAMA,KAAK,GAAG,mEAAd;AACA,eAAe;AAIbC,EAAAA,IAJa,kBAII;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AACf,QAAIC,GAAJ;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAKD,KAAK,GAAG,CAAR,EAAWD,CAAC,GAAG,CAAf,EAAkBD,GAAG,GAAGH,KAA7B,EAAoCE,KAAK,CAACK,MAAN,CAAaH,CAAC,GAAG,CAAjB,MAAwBD,GAAG,GAAG,GAAN,EAAWC,CAAC,GAAG,CAAvC,CAApC,EAA+EE,MAAM,IAAIH,GAAG,CAACI,MAAJ,CAAW,KAAKF,KAAK,IAAI,IAAID,CAAC,GAAG,CAAJ,GAAQ,CAArC,CAAzF,EAAkI;AAChI,UAAMI,QAAQ,GAAGN,KAAK,CAACO,UAAN,CAAiBL,CAAC,IAAI,IAAI,CAA1B,CAAjB;;AAEA,UAAII,QAAQ,GAAG,IAAf,EAAqB;AACnB,cAAM,IAAIE,KAAJ,CAAU,2GAAV,CAAN;AACD;;AAEDL,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAT,GAAaG,QAArB;AACD;;AAED,WAAOF,MAAP;AACD,GArBY;AA0BbK,EAAAA,IA1Ba,kBA0BI;AAAA,QAAZT,KAAY,uEAAJ,EAAI;AACf,QAAIE,CAAC,GAAG,CAAR;AACA,QAAIQ,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT;AACA,QAAIC,MAAJ;AACA,QAAIR,MAAM,GAAG,EAAb;AACA,QAAMS,GAAG,GAAGb,KAAK,CAACc,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAZ;;AAEA,QAAID,GAAG,CAACE,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIP,KAAJ,CAAU,oFAAV,CAAN;AACD;;AAGD,SAAKE,EAAE,GAAG,CAAL,EAAQC,EAAE,GAAG,CAAb,EAAgBT,CAAC,GAAG,CAAzB,EAA4BU,MAAM,GAAGC,GAAG,CAACR,MAAJ,CAAWH,CAAC,EAAZ,CAArC,EAAsD,CAACU,MAAD,KAAYD,EAAE,GAAGD,EAAE,GAAG,CAAL,GAASC,EAAE,GAAG,EAAL,GAAUC,MAAnB,GAA4BA,MAAjC,EAAyCF,EAAE,KAAK,CAA5D,IAAiEN,MAAM,IAAIY,MAAM,CAACC,YAAP,CAAoB,MAAMN,EAAE,KAAK,CAAC,CAAD,GAAKD,EAAL,GAAU,CAAf,CAA5B,CAA3E,GAA4H,CAAlL,EAAqL;AACnLE,MAAAA,MAAM,GAAGd,KAAK,CAACoB,OAAN,CAAcN,MAAd,CAAT;AACD;;AAED,WAAOR,MAAP;AACD;AA5CY,CAAf","sourcesContent":["/* eslint-disable */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport default {\n  /**\n   * window.btoa\n   */\n  btoa(input = '') {\n    let map;\n    let i = 0;\n    let block = 0;\n    let output = ''; // eslint-disable-next-line\n\n    for (block = 0, i = 0, map = CHARS; input.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n      const charCode = input.charCodeAt(i += 3 / 4);\n\n      if (charCode > 0xff) {\n        throw new Error(\"'RNFirebase.utils.btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  },\n\n  /**\n   * window.atob\n   */\n  atob(input = '') {\n    let i = 0;\n    let bc = 0;\n    let bs = 0;\n    let buffer;\n    let output = '';\n    const str = input.replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'RNFirebase.utils.atob' failed: The string to be decoded is not correctly encoded.\");\n    } // eslint-disable-next-line\n\n\n    for (bc = 0, bs = 0, i = 0; buffer = str.charAt(i++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      buffer = CHARS.indexOf(buffer);\n    }\n\n    return output;\n  }\n\n};"]},"metadata":{},"sourceType":"module"}