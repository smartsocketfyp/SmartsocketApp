{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\n\nvar SignUpScreen = function (_React$Component) {\n  _inherits(SignUpScreen, _React$Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen() {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSignUp = function () {\n      var _this$state = _this.state,\n          emailPhonenumber = _this$state.emailPhonenumber,\n          password = _this$state.password;\n      firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password).catch(function (error) {\n        return _this.setState({\n          errorMessage: error.message\n        });\n      });\n    };\n\n    _this.state = {\n      fullname: \"\",\n      username: \"\",\n      emailPhonenumber: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.password != this.state.confirmpassword) {\n        React.createElement(View, {\n          style: styles.Instructions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }, \"Please Confirm Password again\"));\n      } else {\n        React.createElement(View, {\n          style: styles.Instructions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, \"Please Confirm Password again\"));\n      }\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.Instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"Fill IN THE DETAILS BELOW\"), React.createElement(View, {\n        style: styles.Full_Name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Full Name*\",\n        value: this.state.fullname,\n        onChangeText: function onChangeText(fullname) {\n          return _this2.setState({\n            fullname: fullname\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.Username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Username*\",\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.Email_Phone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Email or Phone Number\",\n        value: this.state.emailPhonenumber,\n        onChangeText: function onChangeText(emailPhonenumber) {\n          return _this2.setState({\n            emailPhonenumber: emailPhonenumber\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.Password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Password*\",\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.Confirm_Password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Confirm Password*\",\n        value: this.state.confirmpassword,\n        onChangeText: function onChangeText(confirmpassword) {\n          return _this2.setState({\n            confirmpassword: confirmpassword\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.Sign_Up_Button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        disabled: this.state.fullname == '' || this.state.username == '' || this.state.emailPhonenumber == '' || this.state.password == '' || this.state.confirmpassword == '' || this.state.password != this.state.confirmpassword,\n        title: \"Sign Up Now\",\n        onPress: function onPress() {\n          return _this2.handleSignUp() > _this2.props.navigation.navigate(\"Verification\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      })))))))));\n    }\n  }]);\n\n  return SignUpScreen;\n}(React.Component);\n\nexport { SignUpScreen as default };\nvar styles = StyleSheet.create({\n  Instructions: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 150,\n    marginBottom: 30\n  },\n  Full_Name: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  Username: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  Email_Phone: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  Password: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  Confirm_Password: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  Sign_Up_Button: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/SignUpScreen.js"],"names":["React","firebase","SignUpScreen","handleSignUp","state","emailPhonenumber","password","auth","createUserWithEmailAndPassword","catch","error","setState","errorMessage","message","fullname","username","confirmpassword","styles","Instructions","Full_Name","Username","Email_Phone","Password","Confirm_Password","Sign_Up_Button","props","navigation","navigate","Component","StyleSheet","create","flex","alignItems","marginTop","marginBottom","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button, View, Text, TextInput, ScrollView, StyleSheet} from 'react-native';\r\n//import * as firebase from 'firebase';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n//import { firebase } from '@react-native-firebase/auth';\r\n\r\nexport default class SignUpScreen extends React.Component {\r\n    handleSignUp = () => {\r\n        const {emailPhonenumber,password} = this.state;\r\n        firebase.auth().createUserWithEmailAndPassword(emailPhonenumber, password).catch(error => this.setState({errorMessage: error.message})\r\n        );\r\n    };\r\n    \r\n    state = {\r\n        fullname : \"\",\r\n        username : \"\",\r\n        emailPhonenumber : \"\",\r\n        password : \"\",\r\n        confirmpassword : \"\"\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.password != this.state.confirmpassword){\r\n            <View style={styles.Instructions}>\r\n                <Text>Please Confirm Password again</Text>\r\n            </View>\r\n            \r\n        }\r\n        else{\r\n            <View style={styles.Instructions}>\r\n                <Text>Please Confirm Password again</Text>\r\n            </View>\r\n        }\r\n\r\n\t\treturn(\r\n            <ScrollView>\r\n                <View style={styles.Instructions}>\r\n                    <Text>Fill IN THE DETAILS BELOW</Text>\r\n\r\n                <View style={styles.Full_Name}>    \r\n                    <TextInput\r\n                        placeholder=\"Full Name*\"\r\n                        value={this.state.fullname}\r\n                        onChangeText={fullname => this.setState({fullname})}\r\n                    />\r\n                <View style={styles.Username}>\r\n                    <TextInput\r\n                        placeholder=\"Username*\"\r\n                        value={this.state.username}\r\n                        onChangeText={username => this.setState({username})}\r\n                    />\r\n                <View style={styles.Email_Phone}>\r\n                    <TextInput\r\n                        placeholder=\"Email or Phone Number\"\r\n                        value={this.state.emailPhonenumber}\r\n                        onChangeText={emailPhonenumber => this.setState({emailPhonenumber})}\r\n                    />\r\n                <View style={styles.Password}>\r\n                    <TextInput\r\n                        placeholder=\"Password*\"\r\n                        value={this.state.password}\r\n                        onChangeText={password => this.setState({password})}\r\n                        secureTextEntry\r\n                    />\r\n                <View style={styles.Confirm_Password}>\r\n                    <TextInput\r\n                        placeholder=\"Confirm Password*\"\r\n                        value={this.state.confirmpassword}\r\n                        onChangeText={confirmpassword => this.setState({confirmpassword})}\r\n                        secureTextEntry\r\n                    />\r\n                <View style={styles.Sign_Up_Button}>\r\n                    <Button\r\n                        disabled = \r\n                        {\r\n                            (this.state.fullname == '')||\r\n                            (this.state.username == '')||\r\n                            (this.state.emailPhonenumber == '')||\r\n                            (this.state.password == '')||\r\n                            (this.state.confirmpassword == '')||\r\n                            (this.state.password != this.state.confirmpassword)\r\n                        } title=\"Sign Up Now\"\r\n                        onPress={() => this.handleSignUp() > this.props.navigation.navigate(\"Verification\")}\r\n                        //onPress={() => this.props.navigation.navigate(\"Verification\")}\r\n                    />\r\n                </View>\r\n                </View>\r\n                </View>\r\n                </View>\r\n                </View>\r\n                </View>\r\n                </View>\r\n            </ScrollView>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    Instructions: {\r\n        flex: 1, \r\n        alignItems: 'center', \r\n        marginTop: 150, \r\n        marginBottom: 30 \r\n    },\r\n\r\n    Full_Name: {\r\n        flex: 1, \r\n        justifyContent: 'center', \r\n        marginTop:40, \r\n        marginBottom: 10 \r\n    },\r\n\r\n    Username: {\r\n        flex: 1, \r\n        justifyContent: 'center', \r\n        marginTop:40, \r\n        marginBottom: 10\r\n    },\r\n\r\n    Email_Phone: {\r\n        flex: 1, \r\n        justifyContent: 'center', \r\n        marginTop:40, \r\n        marginBottom: 10\r\n    },\r\n\r\n    Password: {\r\n        flex: 1, \r\n        justifyContent: 'center', \r\n        marginTop:40, \r\n        marginBottom: 10 \r\n    },\r\n\r\n    Confirm_Password: {\r\n        flex: 1, \r\n        justifyContent: 'center',\r\n        marginTop:40, \r\n        marginBottom: 10  \r\n    },\r\n\r\n    Sign_Up_Button: {\r\n        flex: 1, \r\n        justifyContent: 'center', \r\n        marginTop:40, \r\n        marginBottom: 10 \r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}