{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\fong\\\\Desktop\\\\code-18122020-combined\\\\Screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport * as firebase from 'firebase';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          marginTop: 250,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this.setState({\n            username: username\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          marginTop: 40,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this.setState({\n            password: password\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        disabled: this.state.password == '' || this.state.username == '',\n        title: \"Sign In\",\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"ScanNow\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      })))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["C:/Users/fong/Desktop/code-18122020-combined/Screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","flex","justifyContent","marginTop","marginBottom","state","username","setState","password","props","navigation","navigate","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;;;;;IAGqBC,W;;;;;;;;;;;;;6BAYT;AAAA;;AACV,aACU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,SAAS,EAAE,GAAhD;AAAqDC,UAAAA,YAAY,EAAE;AAAnE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QAFtB;AAGI,QAAA,YAAY,EAAE,sBAAAA,QAAQ;AAAA,iBAAI,KAAI,CAACC,QAAL,CAAc;AAACD,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAJ;AAAA,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEL,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,SAAS,EAAC,EAA/C;AAAmDC,UAAAA,YAAY,EAAE;AAAjE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACQ,QAAA,WAAW,EAAC,UADpB;AAEQ,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWG,QAF1B;AAGQ,QAAA,YAAY,EAAE,sBAAAA,QAAQ;AAAA,iBAAI,KAAI,CAACD,QAAL,CAAc;AAACC,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAJ;AAAA,SAH9B;AAIQ,QAAA,eAAe,MAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEP,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCE,UAAAA,YAAY,EAAE;AAAnD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAK,KAAKC,KAAL,CAAWG,QAAX,IAAsB,EAAvB,IAA6B,KAAKH,KAAL,CAAWC,QAAX,IAAuB,EAAxE;AAA6E,QAAA,KAAK,EAAC,SAAnF;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPA,CANA,CADJ,CADV;AAyBA;;;;EAtCuCb,KAAK,CAACc,S;;SAA1BZ,W","sourcesContent":["import * as React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport { Button, View, TextInput, ScrollView} from 'react-native';\r\n\r\nexport default class LoginScreen extends React.Component {\r\n    \r\n    /*handleLogin = () => {\r\n        const {username,password} = this.state;\r\n        firebase.auth().signInWithEmailandPassword(username,password).catch(error => this.setState({errorMessage: error.message})\r\n        );\r\n    };\r\n    state = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }*/   \r\n    \r\n    render(){\r\n\t\treturn(\r\n            <ScrollView>\r\n                <View style={{ flex: 1, justifyContent: 'center', marginTop: 250, marginBottom: 10 }}>\r\n                    <TextInput\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChangeText={username => this.setState({username})}\r\n                    />\r\n                <View style={{ flex: 1, justifyContent: 'center', marginTop:40, marginBottom: 10 }}>\r\n                    <TextInput\r\n                            placeholder=\"Password\"\r\n                            value={this.state.password}\r\n                            onChangeText={password => this.setState({password})}\r\n                            secureTextEntry\r\n                        />\r\n                <View style={{ flex: 1, justifyContent: 'center', marginBottom: 10 }}>\r\n                    <Button disabled = {(this.state.password== '')||(this.state.username == '')} title=\"Sign In\" \r\n                        //onPress={() => this.handleLogin() > this.props.navigation.push(\"Scan Now\", password)}\r\n                        onPress={() => this.props.navigation.navigate(\"ScanNow\")}\r\n                    />\r\n                </View>\r\n                </View>\r\n                </View>\r\n            </ScrollView>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}